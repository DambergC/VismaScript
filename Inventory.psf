<File version="3.2">
  <FileID>1675b376-67a2-4c14-9366-a4f84698131d</FileID>
  <Preview>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
AAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAA
eJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHib
XesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13r
GQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkA
yBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgV
AwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMA
AHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4
m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd
6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZ
AMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDI
FQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUD
AAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAA
eJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHib
XesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13r
GQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkA
yBUDAAB4m13rGQDIFQMAAHibXesZAMgVAwAAeJtd6xkAyBUDAAB4m13rGQDIFQMAAHibXesZAMgV
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</Preview>
  <Form>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
PH4Mr/4Bo7reql0mAAA=</Form>
  <Code><![CDATA[
$formInventory_Load={
	#TODO: Initialize Form Controls here
	Refresh-StatusBar
	
	if ($global:SelectedBackupfolder -eq 'Select Folder' -or $global:SelectedBigram -eq 'Select Bigram')
	{
		$buttonSystem.Enabled = $false
		$buttonSettings.Enabled = $false
		$buttonPassword.Enabled = $false
	}
	
	else
	{
		$buttonSystem.Enabled = $true
		$buttonSettings.Enabled = $true
		$buttonPassword.Enabled = $true
	}
	
	#Requires -Version 5.1
}

$buttonSystem_Click={
	#TODO: Place custom script here
	$selectedBackupfolder = $global:SelectedBackupfolder
	$selectedBigram = $global:SelectedBigram
	$services = "Scheduler", "Ciceron Server Manager", "NeptuneMB_$selectedBigram", "PersonecPBatchManager$selectedBigram", "PersonecPUtdataExportImportService$selectedBigram", "RSPFlexService$selectedBigram", "Visma.P-Background-Service - $selectedBigram", "Visma.PersonecP.PufIa.WinSvc - $selectedBigram"
	

		
		###################################
		# INVENTORY OF SERVICES
		###################################
		
		$data = @()
		
		foreach ($Service in $Services)
		{
			$InfoOnService = Get-CimInstance win32_service | Where-Object Name -eq $Service | Select-Object name, startname, state, Startmode -ErrorAction SilentlyContinue
			
			if ($InfoOnService -ne $null)
			{
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Service' -Value $InfoOnService.name
				$object | Add-Member -MemberType NoteProperty -Name 'Konto' -Value $InfoOnService.Startname
				$object | Add-Member -MemberType NoteProperty -Name 'Status' -Value $InfoOnService.state
				$object | Add-Member -MemberType NoteProperty -Name 'StartMode' -Value $InfoOnService.startmode
				
				$data += $object
			}
			
			else
			{
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Service' -Value $Service
				$object | Add-Member -MemberType NoteProperty -Name 'Konto' -Value "--"
				$object | Add-Member -MemberType NoteProperty -Name 'Status' -Value "Does not exist"
				$object | Add-Member -MemberType NoteProperty -Name 'StartMode' -Value "--"
				
				$data += $object
			}
			
		}
		
		$result = $data | Out-String
		$richtextbox1.Clear()
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Services Installed:")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText($result)
		$richtextbox1.ScrollToCaret()
		Write-Log -Level INFO -Message "Services Installed:"
		Write-Log -Level INFO -Message $result
		
		###################################
		# INVENTORY OF APPLICATIONS
		###################################	
		
		$data2 = @()
		
		$installed = Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKCU:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*' -ErrorAction Ignore | Where-Object publisher -eq 'Visma' | Select-Object -Property DisplayName, DisplayVersion, Publisher | Sort-Object -Property DisplayName
		
		
		if ($installed -ne $null)
		{
			foreach ($inst in $installed)
			{
				
				
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Applikation' -Value $inst.displayname
				$object | Add-Member -MemberType NoteProperty -Name 'Version' -Value $inst.displayversion
				$object | Add-Member -MemberType NoteProperty -Name 'Utgivare' -Value $inst.publisher
				
				$data2 += $object
			}
			
			$result = $data2 | Out-String
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText("Applications installed:  ")
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText($result)
			$richtextbox1.ScrollToCaret()
			Write-Log -Level INFO -Message " Applications Installed:"
			Write-Log -Level INFO -Message $result
			
		}
		
		
		else
		{
			$richtextbox1.AppendText("`n")

			$richtextbox1.AppendText("NO Applications installed:")
			$richtextbox1.AppendText("`n")
			
			Write-Log -Level INFO -Message "No Applications from Visma installed"
			
		}
		
		###################################
		# INVENTORY OF APPLICATIONPOOLS
		###################################	
		
		try
		{
			$appPools = Get-WebConfiguration -Filter '/system.applicationHost/applicationPools/add'
			$appPoolResultat = [System.Collections.ArrayList]::new()
			
			if ($appPools.count -ge '2')
			{
				foreach ($appPool in $appPools)
				{
					
					[void]$appPoolResultat.add([PSCustomObject]@{
							Name = $appPool.name
							User = $appPool.ProcessModel.UserName
							#Password = $appPool.ProcessModel.Password
						})
					
				}
				
				$result = $appPoolResultat | Out-String
				

				$richtextbox1.AppendText("`n")
				$richtextbox1.AppendText("Applications Pools:")
				$richtextbox1.AppendText("`n")
				$richtextbox1.AppendText($result)
				$richtextbox1.ScrollToCaret()
				Write-Log -Level INFO -Message " Application Pools:"
				Write-Log -Level INFO -Message $result
			}
			
			else
			{
				$richtextbox1.AppendText("`n")

				$richtextbox1.AppendText("No Applications Pools present   ")
				$richtextbox1.AppendText("`n")

				$richtextbox1.ScrollToCaret()
				Write-Log -Level INFO -Message "NO Application Pools"

			}
		}
		
		catch
		{
			Write-Log -Level INFO -message -"no app-pool"
			
		}
	
	
}

$buttonPassword_Click={
	#TODO: Place custom script here
	$selectedBackupfolder = $global:SelectedBackupfolder
	$selectedBigram = $global:SelectedBigram
	

	
		
		###################################
		# Check backupfolder if encrypted
		###################################	
		
		$AppPaths = (Get-ChildItem -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot" -Recurse -Filter web.config).DirectoryName
		
		
		foreach ($AppPath in $AppPaths)
		{
			
			[XML]$CheckElementXML = Get-Content -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot\$selectedBigram\PPP\Personec_P_web\Lon\web.config"
			
			
		}
		
		[XML]$CheckElementXML = Get-Content -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot\$selectedBigram\PPP\Personec_P_web\Lon\web.config"
		
		if ($CheckElementXML.configuration.appSettings.EncryptedData -ne $null)
		{
			$richtextbox1.Clear()
			$richtextbox1.AppendText("`n")

			$richtextbox1.AppendText("Backupfolder is encrypted!!!")
			$richtextbox1.AppendText("`n")
			$richtextbox1.ScrollToCaret()
			
		}
		else
		{
			
			$data5 = @()
			
			
			$pstid = Get-IniFile "$InstallDrive\Visma\install\backup\$selectedBackupfolder\programs\$selectedBigram\ppp\Personec_p\pstid.ini" -ErrorAction SilentlyContinue
			[xml]$Batch = Get-Content "$InstallDrive\Visma\install\backup\$selectedBackupfolder\Programs\$selectedBigram\PPP\Personec_P\batch.config" -ErrorAction SilentlyContinue
			[XML]$PIA = Get-Content "$InstallDrive\Visma\install\backup\$selectedBackupfolder\Wwwroot\$selectedBigram\PIA\PUF_IA Module\web.config" -ErrorAction SilentlyContinue
			
			$object = New-Object -TypeName PSObject
			$object | Add-Member -MemberType NoteProperty -Name 'NeptuneUser' -Value $PSTID.styr.NeptuneUser
			$object | Add-Member -MemberType NoteProperty -Name 'NeptunePassword' -Value $PSTID.styr.NeptuneUser
			$object | Add-Member -MemberType NoteProperty -Name 'Batchuser' -Value $Batch.configuration.appsettings.add.where{ $_.key -eq 'sysuser' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'BatchPassword' -Value $Batch.configuration.appsettings.add.where{ $_.key -eq 'SysPassword' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PPP Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'P.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PPP Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'P.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PUD Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'U.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PUD Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'U.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PFH Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'F.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PFH Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'F.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'Service Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'ServiceUser.Login' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'Service Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'serviceUser.Secret' }.value
			$data5 += $object
			
			$result = $data5 | Out-String
			
			$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Settings from backup:")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$result")
			$richtextbox1.ScrollToCaret()
		}
	
}

]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>