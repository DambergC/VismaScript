<File version="3.2">
  <FileID>1675b376-67a2-4c14-9366-a4f84698131d</FileID>
  <Preview>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</Preview>
  <Form>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
KLYaTx/Dq78BHWVRuXgmAAA=</Form>
  <Code><![CDATA[
$formInventory_Load={
	#TODO: Initialize Form Controls here
	Refresh-Inventory
	
	if ($global:SelectedBackupfolder -eq 'Select Folder' -or $global:SelectedBigram -eq 'Select Bigram')
	{
		$buttonSystem.Enabled = $false
		$buttonSettings.Enabled = $false
		$buttonPassword.Enabled = $false
	}
	
	else
	{
		$buttonSystem.Enabled = $true
		$buttonSettings.Enabled = $true
		$buttonPassword.Enabled = $true
	}
	
	#Requires -Version 5.1
}

$buttonSystem_Click={
	#TODO: Place custom script here
	$selectedBackupfolder = $global:SelectedBackupfolder
	$selectedBigram = $global:SelectedBigram
	$services = "Scheduler", "Ciceron Server Manager", "NeptuneMB_$selectedBigram", "PersonecPBatchManager$selectedBigram", "PersonecPUtdataExportImportService$selectedBigram", "RSPFlexService$selectedBigram", "Visma.P-Background-Service - $selectedBigram", "Visma.PersonecP.PufIa.WinSvc - $selectedBigram"
	

		
		###################################
		# INVENTORY OF SERVICES
		###################################
		
		$data = @()
		
		foreach ($Service in $Services)
		{
			$InfoOnService = Get-CimInstance win32_service | Where-Object Name -eq $Service | Select-Object name, startname, state, Startmode -ErrorAction SilentlyContinue
			
			if ($InfoOnService -ne $null)
			{
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Service' -Value $InfoOnService.name
				$object | Add-Member -MemberType NoteProperty -Name 'Konto' -Value $InfoOnService.Startname
				$object | Add-Member -MemberType NoteProperty -Name 'Status' -Value $InfoOnService.state
				$object | Add-Member -MemberType NoteProperty -Name 'StartMode' -Value $InfoOnService.startmode
				
				$data += $object
			}
			
			else
			{
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Service' -Value $Service
				$object | Add-Member -MemberType NoteProperty -Name 'Konto' -Value "--"
				$object | Add-Member -MemberType NoteProperty -Name 'Status' -Value "Does not exist"
				$object | Add-Member -MemberType NoteProperty -Name 'StartMode' -Value "--"
				
				$data += $object
			}
			
		}
		
		$result = $data | Out-String
		$richtextbox1.Clear()
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Services Installed:")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText($result)
		$richtextbox1.ScrollToCaret()
		Write-Log -Level INFO -Message "Services Installed:"
		Write-Log -Level INFO -Message $result
		
		###################################
		# INVENTORY OF APPLICATIONS
		###################################	
		
		$data2 = @()
		
		$installed = Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKLM:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\*',
									  'HKCU:\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*' -ErrorAction Ignore | Where-Object publisher -eq 'Visma' | Select-Object -Property DisplayName, DisplayVersion, Publisher | Sort-Object -Property DisplayName
		
		
		if ($installed -ne $null)
		{
			foreach ($inst in $installed)
			{
				
				
				$object = New-Object -TypeName PSObject
				$object | Add-Member -MemberType NoteProperty -Name 'Applikation' -Value $inst.displayname
				$object | Add-Member -MemberType NoteProperty -Name 'Version' -Value $inst.displayversion
				$object | Add-Member -MemberType NoteProperty -Name 'Utgivare' -Value $inst.publisher
				
				$data2 += $object
			}
			
			$result = $data2 | Out-String
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText("Applications installed:  ")
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText($result)
			$richtextbox1.ScrollToCaret()
			Write-Log -Level INFO -Message " Applications Installed:"
			Write-Log -Level INFO -Message $result
			
		}
		
		
		else
		{
			$richtextbox1.AppendText("`n")

			$richtextbox1.AppendText("NO Applications installed:")
			$richtextbox1.AppendText("`n")
			
			Write-Log -Level INFO -Message "No Applications from Visma installed"
			
		}
		
		###################################
		# INVENTORY OF APPLICATIONPOOLS
		###################################	
		
		try
		{
			$appPools = Get-WebConfiguration -Filter '/system.applicationHost/applicationPools/add'
			$appPoolResultat = [System.Collections.ArrayList]::new()
			
			if ($appPools.count -ge '2')
			{
				foreach ($appPool in $appPools)
				{
					
					[void]$appPoolResultat.add([PSCustomObject]@{
							Name = $appPool.name
							User = $appPool.ProcessModel.UserName
							#Password = $appPool.ProcessModel.Password
						})
					
				}
				
				$result = $appPoolResultat | Out-String
				

				$richtextbox1.AppendText("`n")
				$richtextbox1.AppendText("Applications Pools:")
				$richtextbox1.AppendText("`n")
				$richtextbox1.AppendText($result)
				$richtextbox1.ScrollToCaret()
				Write-Log -Level INFO -Message " Application Pools:"
				Write-Log -Level INFO -Message $result
			}
			
			else
			{
				$richtextbox1.AppendText("`n")

				$richtextbox1.AppendText("No Applications Pools present   ")
				$richtextbox1.AppendText("`n")

				$richtextbox1.ScrollToCaret()
				Write-Log -Level INFO -Message "NO Application Pools"

			}
		}
		
		catch
		{
			Write-Log -Level INFO -message -"no app-pool"
			
		}
	
	
}

$buttonPassword_Click={
	#TODO: Place custom script here
	$selectedBackupfolder = $global:SelectedBackupfolder
	$selectedBigram = $global:SelectedBigram
	

	
		
		###################################
		# Check backupfolder if encrypted
		###################################	
		
		$AppPaths = (Get-ChildItem -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot" -Recurse -Filter web.config).DirectoryName
		
		
		foreach ($AppPath in $AppPaths)
		{
			
			[XML]$CheckElementXML = Get-Content -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot\$selectedBigram\PPP\Personec_P_web\Lon\web.config"
			
			
		}
		
		[XML]$CheckElementXML = Get-Content -Path "$InstallDrive\Visma\Install\Backup\$selectedBackupfolder\wwwroot\$selectedBigram\PPP\Personec_P_web\Lon\web.config"
		
		if ($CheckElementXML.configuration.appSettings.EncryptedData -ne $null)
		{
			$richtextbox1.Clear()
			$richtextbox1.AppendText("`n")

			$richtextbox1.AppendText("Backupfolder is encrypted!!!")
			$richtextbox1.AppendText("`n")
			$richtextbox1.ScrollToCaret()
			
		}
		else
		{
			
			$data5 = @()
			
			
			$pstid = Get-IniFile "$InstallDrive\Visma\install\backup\$selectedBackupfolder\programs\$selectedBigram\ppp\Personec_p\pstid.ini" -ErrorAction SilentlyContinue
			[xml]$Batch = Get-Content "$InstallDrive\Visma\install\backup\$selectedBackupfolder\Programs\$selectedBigram\PPP\Personec_P\batch.config" -ErrorAction SilentlyContinue
			[XML]$PIA = Get-Content "$InstallDrive\Visma\install\backup\$selectedBackupfolder\Wwwroot\$selectedBigram\PIA\PUF_IA Module\web.config" -ErrorAction SilentlyContinue
			
			$object = New-Object -TypeName PSObject
			$object | Add-Member -MemberType NoteProperty -Name 'NeptuneUser' -Value $PSTID.styr.NeptuneUser
			$object | Add-Member -MemberType NoteProperty -Name 'NeptunePassword' -Value $PSTID.styr.NeptuneUser
			$object | Add-Member -MemberType NoteProperty -Name 'Batchuser' -Value $Batch.configuration.appsettings.add.where{ $_.key -eq 'sysuser' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'BatchPassword' -Value $Batch.configuration.appsettings.add.where{ $_.key -eq 'SysPassword' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PPP Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'P.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PPP Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'P.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PUD Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'U.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PUD Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'U.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'PFH Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'F.Database.User' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'PFH Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'F.Database.Password' }.value
			
			$object | Add-Member -MemberType NoteProperty -Name 'Service Username' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'ServiceUser.Login' }.value
			$object | Add-Member -MemberType NoteProperty -Name 'Service Password' -Value $PIA.configuration.appsettings.add.where{ $_.key -eq 'serviceUser.Secret' }.value
			$data5 += $object
			
			$result = $data5 | Out-String
			
			$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Settings from backup:")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$result")
			$richtextbox1.ScrollToCaret()
		}
	
}

]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>