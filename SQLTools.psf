<File version="3.2">
  <FileID>a39bb7e1-3975-43b8-97aa-dc75b5de76d4</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAHErSURBVHhe7f1XcFTZvi747jgnovuax+7X+3Af
+t4Tp7sj7o3oG90n2sTd5+y91t57mTKrPIUHCXmDvPcGGSSQQ1ghEPICOeS9996bVHojL4Qr8/UY
U6iKYiUFFFAllb5fxRcoM6cbM7Ny/MfMOTP/gYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIjezNV//+//fdd//x//Q5eHh2eXn19Al6+vP8MwDMMw+yR+fv5dQUHBXZ99+mnX/+W/
/q+7RN8u8/P+3b/7d6Mf/PUD3Mq7i75JNSbVq5hQLTMMwzAMs2+ygsmlFbT1jcPfPxD/7X/z3+BZ
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
/1V+FGhl+e0LgCndA4wuWNDc3ASTUY8NUVXIQwsMwzAMw/y2kSP9H7NzW3b+DzbXYXrbHwOSM06J
OZe3voV546lSURgZhmEYhtm7EZ3/gukBJjSbb1cAyIyJhchKgmEYhmGYvZ/dzv+tCwCGYRiGYfZn
XrsACAgI7N7+HsoMDMMwDMPs7zwAUFZR8+oC4PRp24HyyhoUlZSjsKSMYRiGYZh9nPL7tYg9l/Dq
AoCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI
iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIdv3DP/yfvs9+010lf+UAAAAA
SUVORK5CYII=</Preview>
  <Form>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
+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</Form>
  <Code><![CDATA[
$formSQLTools_Load = {
	#TODO: Initialize Form Controls here
	Refresh-StatusBar
	
	$DisplayMode = Get-RegValue -RegPath 'HKLM:\SOFTWARE\Wow6432Node\Visma\TeliaCygate' -RegName DisplayModeScript
	
	if ($DisplayMode -eq 'Light')
	{
		Set-ControlTheme -Control $formSQLTools -Theme Light
	}
	
	elseif ($DisplayMode -eq 'Dark')
	{
		Set-ControlTheme -Control $formSQLTools -Theme Dark
	}
	
	If ($global:SelectedBigram -eq 'Select Bigram' -or $global:SelectedBackupfolder -eq 'Select Folder')
	{
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("You Need to select BIGRAM and BackupFolder")
		$richtextbox1.ScrollToCaret()
		$formSQLTools.Close()
	}
}

if (Is-ProcessRunning -ProcessName PublicInstallerNextGen)
{
	$buttonPPPVersion.Enabled = $true
	$buttonPFHVersion.Enabled = $true
	$buttonPUDVersion.Enabled = $true
	$buttonPPPScriptrun.Enabled = $true
	$buttonPFHScriptrun.Enabled = $true
	$buttonPUDScriptrun.Enabled = $true
	
}

else
{
	$buttonPPPVersion.Enabled = $false
	$buttonPFHVersion.Enabled = $false
	$buttonPUDVersion.Enabled = $false
	$buttonPPPScriptrun.Enabled = $false
	$buttonPFHScriptrun.Enabled = $false
	$buttonPUDScriptrun.Enabled = $false
}

$buttonDBUpgradeScriptFile_Click = {
	#TODO: Place custom script here
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	[XML]$xmlValues = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\$global:selectedbigram.XML"
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$QRRead = $global:SelectedBigram + "_QRRead"
	$DB_PPP = $global:SelectedBigram + "_PPP"
	$DB_PFH = $global:SelectedBigram + "_PFH"
	$DB_PUD = $global:SelectedBigram + "_PUD"
	$DB_PAG = $global:SelectedBigram + "_PAG"
	$DB_Neptune = $global:SelectedBigram + "Neptune"
	$Sec_User = $global:SelectedBigram + "_Sec"
	$DBUser_DU = $global:SelectedBigram + "_DashboardUser"
	$DBUser_MU = $global:SelectedBigram + "_MenuUser"
	$DBUser_SU = $global:SelectedBigram + "_SecurityUser"
	$DBUser_NA = $global:SelectedBigram + "_NeptuneAdmin"
	$DBUser_NU = $global:SelectedBigram + "_NeptuneUser"
	$HRMVersionXML = $xmlValuesVersion.configuration.HRMversion
	$PINVersionXML = $xmlValuesVersion.configuration.PINversion
	$PPPXML = $xmlValuesVersion.configuration.PPP
	$PUDXML = $xmlValuesVersion.configuration.PUD
	$PFHXML = $xmlValuesVersion.configuration.PFH
	
	$QRReadPW = New-RandomPassword -length 14
	
	$SQL_queries = @"
#------------------------------------------------#
# SQL Query for update scripts
#------------------------------------------------#

##Personic P
USE $DB_PPP
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\mRSPu$PPPXML.sql
GO
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\mRSPview.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\mRSPproc.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\mRSPtriggers.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\mRSPgra.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\msDBUPDATERIGHTSP.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$PPPXML\PPPds_Feltexter.sql
GO
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------#
#Personic U
USE $DB_PUD
SELECT * FROM dbo.PU_VERSIONSINFO
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$PUDXML\mPSUu$PUDXML.sql
GO
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$PUDXML\mPSUproc.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$PUDXML\mPSUview.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$PUDXML\mPSUgra.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$PUDXML\msdbupdaterightsU.sql
GO
SELECT * FROM dbo.PU_VERSIONSINFO
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------#
##Personic PFH
USE $DB_PFH
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\mPSFu$PFHXML.sql
GO
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\mPSFproc.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\mPSFview.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\mPSFgra.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\msDBUPDATERIGHTSF.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$PFHXML\PFHds_Feltexter.sql
GO
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------# 
"@
	
	
	if (Test-Path "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt")
	{
		
		$RichtextboxSQLQueries.AppendText("`n")
		
		$RichtextboxSQLQueries.AppendText("Generate SQL Queries for DB upgrade ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("FILE ALREADY CREATED!!! If wrong - Delete ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Queries-file: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("DB_upgrade_Queries.txt ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Path: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\")
		$RichtextboxSQLQueries.ScrollToCaret()
	}
	
	else
	{
		
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Generate SQL Queries for DB upgrade ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("FILE CREATED ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Queries-file: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("DB_upgrade_Queries.txt ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Path: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt\")
		$RichtextboxSQLQueries.ScrollToCaret()
		
		Write-Log -Level INFO -Message "Queries for DB upgrade created"
		Write-Log -Level INFO -Message "Queries-file:"
		Write-Log -Level INFO -Message "DB_upgrade_Queries.txt"
		Write-Log -Level INFO -Message "Path:"
		Write-Log -Level INFO -Message "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt\"
		$SQL_queries | Out-File "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt" -Force
		
	}
	
	
}

$buttonQRReadScriptClipboar_Click = {
	#TODO: Place custom script here
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$QRRead = $selectedBigram + "_QRRead"
	$DB_PPP = $selectedBigram + "_PPP"
	$DB_PFH = $selectedBigram + "_PFH"
	$DB_PUD = $selectedBigram + "_PUD"
	$DB_PAG = $selectedBigram + "_PAG"
	$DB_Neptune = $selectedBigram + "_Neptune"
	$Sec_User = $selectedBigram + "_Sec"
	$DBUser_DU = $selectedBigram + "_DashboardUser"
	$DBUser_MU = $selectedBigram + "_MenuUser"
	$DBUser_SU = $selectedBigram + "_SecurityUser"
	$DBUser_NA = $selectedBigram + "_NeptuneAdmin"
	$DBUser_NU = $selectedBigram + "_NeptuneUser"
	$HRMVersionXML = $xmlValues.configuration.ReleaseVersion
	$PPPXML = $xmlValues.configuration.PPP
	$PUDXML = $xmlValues.configuration.PUD
	$PFHXML = $xmlValues.configuration.PFH
	
	$QRReadPW = New-RandomPassword -length 14
	
	$QRRead_users = @"
#------------------------------------------------#
#SQL Query for QRread accounts
USE [master]
GO
CREATE LOGIN [$QRRead] WITH PASSWORD=N'WRITE_NEW_PASSWORD_HERE', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO

USE [$DB_Neptune] -- Neptune
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PFH] -- Personec Forhandling
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PPP] -- Personec P
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PUD] -- Personec Utdata
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PAG] -- Personec Anstallningsguide
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO
#------------------------------------------------#
"@
	
	
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for QR Read ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Query created and sent to ClipBoard")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "Queries for QR Read created and sent to Clipboard"
	
	Set-Clipboard -Value $QRRead_users
	
}

$buttonChangePwdScriptClipb_Click = {
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$dashboarduser = $selectedBigram + '_DashBoardUser'
	$MenuUser = $selectedBigram + '_MenuUser'
	$NeptuneAdmin = $selectedBigram + '_NeptuneAdmin'
	$NeptuneReportUser = $selectedBigram + '_NeptuneReportUser'
	$NeptuneUser = $selectedBigram + '_NeptuneUser'
	$QuickReportAdmin = $selectedBigram + '_QuickReportAdmin'
	$QuickReportUser = $selectedBigram + '_QuickReportUser'
	$QRread = $selectedBigram + '_QRread'
	
	
	$newpassword = New-RandomPassword -length 14
	
	$SQL_queries = @"
#------------------------------------------------#
# SQL Query for Change password scripts
#------------------------------------------------#

USE master;
GO

-- Declare variables
DECLARE @NewPassword NVARCHAR(100);

-- Set the new password (you can modify this as needed)
SET @NewPassword = 'WRITE_THE_PASSWORD_HERE';

-- Create a temporary table to store the predefined accounts to be updated
CREATE TABLE #AccountsToUpdate (
    AccountName NVARCHAR(128)
);

-- Insert the predefined account names into the temporary table
-- Replace these with the actual account names you want to update
INSERT INTO #AccountsToUpdate (AccountName)
VALUES
    ('$DashboardUser'), ('$MenuUser'), ('$NeptuneAdmin'), ('$NeptuneReportUser'), ('$NeptuneUser'),
    ('$QuickReportAdmin'), ('$QuickReportUser'), ('$QRread'), ('Visma_CurrencyUser'),
    ('Visma_CommonStorageUser'), ('Visma_SchedulerUser'), ('rspdbuser')


-- Declare a variable for dynamic SQL
DECLARE @sql NVARCHAR(MAX);

-- Initialize the dynamic SQL string
SET @sql = N'';

-- Build the dynamic SQL for each account
SELECT @sql = @sql + N'
ALTER LOGIN [' + AccountName + '] WITH PASSWORD = N''' + @NewPassword + ''' ;'
FROM #AccountsToUpdate;

-- Execute the dynamic SQL
EXEC sp_executesql @sql;


-- Confirm the number of accounts updated
SELECT 'Passwords updated for ' + CAST((SELECT COUNT(*) FROM #AccountsToUpdate ) AS NVARCHAR(10)) + ' accounts.' AS Result;

-- Clean up the temporary table
DROP TABLE #AccountsToUpdate;

"@
	
	
	
	
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for Passwordchange")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Queries created - Sent to Clipboard ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$dashboarduser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$MenuUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneAdmin")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneReportUser ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneUser ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$QuickReportAdmin	")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$QuickReportUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_CurrencyUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_CommonStorageUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_SchedulerUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("rspdbuser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "SQL Queries created for Password Change"
	Write-Log -Level INFO -Message "Sent to clipboard"
	
	Set-Clipboard -Value $SQL_queries
	
}

$buttonNA_adminScriptClipbo_Click={
	#TODO: Place custom script here
	
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$neptuneDB = $selectedBigram + '_Neptune'
	
	[void][Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
	
	$title = 'Username'
	$msg = 'What is your preferred username:'
	
	$usernamePref = [Microsoft.VisualBasic.Interaction]::InputBox($msg, $title)
	
	[void][Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
	
	
	$title = 'Your name'
	$msg = 'What is your name:'
	
	$YourName = [Microsoft.VisualBasic.Interaction]::InputBox($msg, $title)
	
	
	$SQL_neptune = @"

--
-- Datum    Namn
-- 20240326 EbbesNic 	Korrigering. Satte 'se' i default_language när det skulle vara 'sv' och 'SE'
--                      sätts nu i DEFAULT_REGION
-- 20240308 EbbesNic	Skapad
--
-- Detta skript skapar upp en användare med lösenord i Neptune.
-- Då alla tekniker ska ha ett eget användarid framöver och vi inte längre ska använda 
-- gemensamma användare kommer kanske detta script att bli användbart.
--
-- Tillvägagångssätt:
-- Om du har skriptet sedan tidigare med sparade värden ska endast pkt 6 och 7 utföras.
-- Det innebär att helt enkelt köra detta skriptet då här redan finns värden sedan tidigare.
--
-- 1. Skapa din användare i Neptune och sätt ditt unika och komplexa lösenord på minst 13 tecken, 
--    gärna genererat och sedan lagrat i exemplevis 1Password.
-- 2. Gör select från Neptune-databasen där du har skapat din användare manuellt med aktuellt lösenord:
-- ****************************************************************************************************
--    select * from t_PasswordHistory where user_id = (select user_id from t_user 
--        where login_name = '[ange ditt användarid för din anvädare]')
-- ****************************************************************************************************
-- 3. Gör copy and paste av värdet för Password och klistra in som värde nedan för variabeln @password.
-- 4. Gör copy and paste av värdet för Salt och klistra in som värde nedan för variabeln @salt.
-- 5. Spara nu detta skript på ett bra ställe. Lösenordet sparar du i exempelvis 1Password
--
-- **** För att skapa din användare ska värdena nedan som finns som variabler vara ifyllda. ****
-- 6. Hos kunden loggar du in i MS SQL och Neptunedatabasen som ViWInstall eller sa, 
--    nån som får lov att uppdatera Neptune.
-- 7. Kör skriptet för att skapa upp din användare som systemadministratör med lösenord och få rollerna 
--    "Administrator" och "VismaWindowAdmin" kopplade till din användare.
--

use $neptuneDB


DECLARE @login_name             varchar(100) = '$usernamePref'
      , @name                   varchar(100) = '$YourName'
      , @description            varchar(100) = 'Personligt ADM konto'
      , @Role_VismaWindowAdmin  varchar(100) = 'VismaWindowAdmin'
      , @Role_Extra_1           varchar(100) = '[Ange en annan roll om fler önskas kopplas]'
      , @Role_Extra_2           varchar(100) = '[Ange ytterligare en annan roll om fler önskas kopplas]'
      , @password               varchar(200) = '3m7TmaFOVJQ+FF85KzhSl5em8WTVxV73xlspLJrYyQs6edJ6oNufur9rGFrWNQ=='
      , @salt                   varchar(200) = 'tmjkxWdJTrIvvrgNIBkR++zbzdDCSL9ipzZxOANaXJOOFhwIpg4+D6DrjZ4w9g=='

-- Skapa användaren
insert into t_user (login_name, name, description, admin_level, IS_CHANGE_PASSWORD, IS_LOCKED_ACCOUNT, IS_NEVER_EXPIRES, DEFAULT_LANGUAGE, DEFAULT_REGION) 
       values(@login_name, @name, @description, 255, 1, 0, 1, 'sv', 'SE')

-- Skapa password. Ett password som man själv har skapat manuellt i Neptune och sedan kopierat tillsammans 
-- med krypterade nyckeln Salt
insert into t_passwordhistory (user_id, password, CREATION_TIME, salt)
       values((select user_id from t_user where login_name = @login_name), @password, getdate(), @salt )

-- Skapa koppling mellan användaren och aktuell(a) roll(er)
insert into t_user_usergroup (user_id, usergroup_id)
       (select tu.user_id, tug.UserGroup_Id
          from t_user tu
               join t_usergroup tug on tug.Name in (@Role_VismaWindowAdmin, @Role_Extra_1, @Role_Extra_2)
         where tu.login_name = @login_name)

-- Kontrollera användaren
select 'SkapadAnvändare', * from t_user where login_name = @login_name

-- Kontrollera password
select 'SkapatLösenord', * from t_PasswordHistory where user_id = (select user_id from t_user where login_name = @login_name)

-- Kontrollera koppling till roll(er)
select 'Kopplade_roller', tu.User_id, tug.UserGroup_Id
     , tu.Login_Name, tug.Name
  from t_user tu
       join t_usergroup tug on tug.Name in (@Role_VismaWindowAdmin, @Role_Extra_1, @Role_Extra_2)
 where tu.login_name = @login_name
 
"@
	

	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for Passwordchange")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Queries created - Sent to Clipboard ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$YourName")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$usernamePref")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$passwordpref")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "SQL Queries created for Password Change"
	
	Set-Clipboard -Value $SQL_neptune
}

$buttonPPPVersion_Click = {
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PPPDatabase = $SelectedBigram +"_PPP"
	

	
	$sqlqueryVersion = @"
USE $PPPDatabase
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check Version: $PPPDatabase")
	$RichtextboxSQLQueries.AppendText("`n")

	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pppDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPPPScriptrun_Click = {
	

	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PPPDatabase = $SelectedBigram + "_PPP"
	
	#TODO: Place custom script here
	
	
	$sqlqueryVersion = @"
USE $PPPDatabase
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check RunScript: $PPPDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pppDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPUDVersion_Click={
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PUDDatabase = $SelectedBigram + "_PUD"
	
	#TODO: Place custom script here
	
	
	$sqlqueryVersion = @"
USE $PUDDatabase
SELECT * FROM dbo.PU_VERSIONSINFO
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check Version: $PUDDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pUDDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
	
}

$buttonPFHVersion_Click = {
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PFHDatabase = $SelectedBigram + "_PFH"
	
	#TODO: Place custom script here
	Install-Module sqlserver
	
	$sqlqueryVersion = @"
USE $PFHDatabase
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check Version: $PFHDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $PFHDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPUDScriptrun_Click = {
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PUDDatabase = $SelectedBigram + "_PUD"
	
	#TODO: Place custom script here
	Install-Module sqlserver
	
	$sqlqueryVersion = @"
USE $PUDDatabase
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check Version: $PUDDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pUDDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPFHScriptrun_Click={
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$FDNVersionXML = $xmlValuesVersion.configuration.FDNVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$FDNVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PFHDatabase = $SelectedBigram + "_PFH"
	
	#TODO: Place custom script here
	Install-Module sqlserver
	
	$sqlqueryVersion = @"
USE $PFHDatabase
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
"@
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Check Version: $PFHDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $PFHDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPPPPFHPUDMiniQueries_Click={
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	$DB_PPP = $global:SelectedBigram + "_PPP"
	$DB_PFH = $global:SelectedBigram + "_PFH"
	$DB_PUD = $global:SelectedBigram + "_PUD"
	
	
	$SQL_queries = @"
USE $DB_PPP
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc

USE $DB_PUD
SELECT * FROM dbo.PU_VERSIONSINFO
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc

USE $DB_PFH
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
"@
	
	$RichtextboxSQLQueries.Clear()
	$RichtextboxSQLQueries.AppendText("Queries for versioncheck manually")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Sent to clipboard")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "Queries for versioncheck manually"
	Write-Log -Level INFO -Message "Sent to clipboard"
	
	Set-Clipboard -Value $SQL_queries
}
]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>