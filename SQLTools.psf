<File version="3.2">
  <FileID>a39bb7e1-3975-43b8-97aa-dc75b5de76d4</FileID>
  <Preview>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
5FabPe9CxWdWOgUgz4w3di/dpqC2xXmf/uqVG6qrq1VaarqT+vo6Xbp4VYfP3THjast30z8wBcAO
+DFm4LdvB9gCYAfs/rchvM7n5uzZeKvW71VycqoyM7O0aet+1dZU6+gx+7mCy6ZQhPTQmb4/9miH
LQBxZse7xNXirL8dy+tCjwdeADytj1VYbwfi56kzMTMrsoP76UTl/dvRyv2LvzKD/l+an//O5H83
141VYUG9irxmgG+wRwAqzcLXKyklSTdTC5Sckq5bybl6WFqjO3EJSsitVVZOpi7fTFdGSb3zlkNR
vXmMelMSXG7dNnv9yXnlunXb/MyvVnxCqlKKHinO3DfuYaWSktOVkFehe4nJin9Yq/zKet28cVU3
7j9SaWPb98tOCCFkxMaOBxdjs51P8TsfRi/vf188tzqkQ6dvaN3GPdqy/dB32bT1gLbsPunsUWe9
NL09lJ6WX6MbyUXOh/bumgKQXx10ioFNnpnftcQ8rdmwRzv3HNOe/Sed2N/XbNyrm8kFzjQvps80
yTd77JfMstnD95fuZJuxNuTs9dtD97mPmpy3vjfvPK5de45q4/aj2nviujZs2a+tOw7q0JmbZue8
1flcQY65j12+YjOG2s/VxT+sUpm73Vl/O5Y3tDwdeAHwtj5RUUObGchbfpCSRjM4t/Q5D1J45I4K
Z+xU4bRtKog4qKKcGhX7u5zp7AbPL3+kuwkpZi/drHRdm8pdQaU9eKjYxAzdvBOnG4lZSi8oV3xi
um6b61KL3c79is3jljaaFc8pU05ts/JKynQ7LsX5kESxp0uFldVmvqmKyyhVobtNWYWV5omtV4qZ
953kPGWbJ6R/Pj9cdkIIISMvdiC0g2u2HcSrmpwBsz/29yYl5dUp0eyQJj1PYk6tMzjbz6N9P22g
//37QrOjmVLsnLaXkFGuQrNz/PI0OWaatKJGZx7fz69G6fb9fnPby9M+rAioqDaky3dznIH+yt1c
lZjlzTYDv30sWwDs594eVvjNfGqc0lBoxkf7GYGU/Pr+aarNtGY57bQ5JiUNrbqTWmIKyiPn1D+7
/kUmDa3PBl4AfG1PzWDf7gykYePtVFnbE5X1fKOy7q+dlAa6fzBNmXnwSn+PSbd5Asx15kmo8HWr
KtCrCo9ZyRKz117f7ly205V7Ol66f7vKfV3OE1fm7VJloMfct/OH87W3m8vl5nZ7Xztv+1jl5j7f
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</Preview>
  <Form>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
S1i/Ip1ecPJmRq1cPP4ZXf0N/duMjw80AAA=</Form>
  <Code><![CDATA[
$formSQLTools_Load = {
	#TODO: Initialize Form Controls here
	Refresh-StatusBar
	
	If ($global:SelectedBigram -eq 'Select Bigram' -or $global:SelectedBackupfolder -eq 'Select Folder')
	{
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("You Need to select BIGRAM and BackupFolder")
		$richtextbox1.ScrollToCaret()
		$formSQLTools.Close()
	}
}

if (Is-ProcessRunning -ProcessName PublicInstallerNextGen)
{
	$buttonPPPVersion.Enabled = $true
	
}

else
{
	$buttonPPPVersion.Enabled = $false
	
	
}

$buttonDBUpgradeScript_Click = {
	#TODO: Place custom script here
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	[XML]$xmlValues = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\$global:selectedbigram.XML"
	$QRRead = $global:SelectedBigram + "_QRRead"
	$DB_PPP = $global:SelectedBigram + "_PPP"
	$DB_PFH = $global:SelectedBigram + "_PFH"
	$DB_PUD = $global:SelectedBigram + "_PUD"
	$DB_PAG = $global:SelectedBigram + "_PAG"
	$DB_Neptune = $global:SelectedBigram + "Neptune"
	$Sec_User = $global:SelectedBigram + "_Sec"
	$DBUser_DU = $global:SelectedBigram + "_DashboardUser"
	$DBUser_MU = $global:SelectedBigram + "_MenuUser"
	$DBUser_SU = $global:SelectedBigram + "_SecurityUser"
	$DBUser_NA = $global:SelectedBigram + "_NeptuneAdmin"
	$DBUser_NU = $global:SelectedBigram + "_NeptuneUser"
	$ReleaseVersionXML = $xmlValues.configuration.ReleaseVersion
	$PPPXML = $xmlValues.configuration.PPP
	$PUDXML = $xmlValues.configuration.PUD
	$PFHXML = $xmlValues.configuration.PFH
	
	$QRReadPW = New-RandomPassword -length 14
	
	$SQL_queries = @"
#------------------------------------------------#
# SQL Query for update scripts
#------------------------------------------------#

##Personic P
USE $DB_PPP
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\mRSPu$PPPXML.sql
GO
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\mRSPview.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\mRSPproc.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\mRSPtriggers.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\mRSPgra.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\msDBUPDATERIGHTSP.sql
:r d:\visma\Install\HRM\PPP\DatabaseServer\Script\SW\$ReleaseVersionXML\PPPds_Feltexter.sql
GO
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------#
#Personic U
USE $DB_PUD
SELECT * FROM dbo.PU_VERSIONSINFO
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSUu$PUDXML.sql
GO
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSUproc.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSUview.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSUgra.sql
:r d:\visma\Install\HRM\PUD\DatabaseServer\Script\SW\$ReleaseVersionXML\msdbupdaterightsU.sql
GO
SELECT * FROM dbo.PU_VERSIONSINFO
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------#
##Personic PFH
USE $DB_PFH
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSFu$PFHXML.sql
GO
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSFproc.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSFview.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\mPSFgra.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\msDBUPDATERIGHTSF.sql
:r d:\visma\Install\HRM\PFH\DatabaseServer\Script\SW\$ReleaseVersionXML\PFHds_Feltexter.sql
GO
SELECT DBVERSION, PROGVERSION FROM dbo.OF0P0997
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
#------------------------------------------------# 
"@
	
	
	if (Test-Path "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt")
	{
		
		$RichtextboxSQLQueries.AppendText("`n")
		
		$RichtextboxSQLQueries.AppendText("Generate SQL Queries for DB upgrade ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("FILE ALREADY CREATED!!! If wrong - Delete ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Queries-file: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("DB_upgrade_Queries.txt ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Path: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\")
		$RichtextboxSQLQueries.ScrollToCaret()
	}
	
	else
	{
		
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Generate SQL Queries for DB upgrade ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("FILE CREATED ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Queries-file: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("DB_upgrade_Queries.txt ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("Path: ")
		$RichtextboxSQLQueries.AppendText("`n")
		$RichtextboxSQLQueries.AppendText("$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt\")
		$RichtextboxSQLQueries.ScrollToCaret()
		
		Write-Log -Level INFO -Message "Queries for DB upgrade created"
		Write-Log -Level INFO -Message "Queries-file:"
		Write-Log -Level INFO -Message "DB_upgrade_Queries.txt"
		Write-Log -Level INFO -Message "Path:"
		Write-Log -Level INFO -Message "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt\"
		$SQL_queries | Out-File "$global:InstallDrive\Visma\install\backup\$global:SelectedBackupfolder\DB_upgrade_Queries.txt" -Force
		
	}
	
	
}

$buttonQRReadScript_Click = {
	#TODO: Place custom script here
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$QRRead = $selectedBigram + "_QRRead"
	$DB_PPP = $selectedBigram + "_PPP"
	$DB_PFH = $selectedBigram + "_PFH"
	$DB_PUD = $selectedBigram + "_PUD"
	$DB_PAG = $selectedBigram + "_PAG"
	$DB_Neptune = $selectedBigram + "Neptune"
	$Sec_User = $selectedBigram + "_Sec"
	$DBUser_DU = $selectedBigram + "_DashboardUser"
	$DBUser_MU = $selectedBigram + "_MenuUser"
	$DBUser_SU = $selectedBigram + "_SecurityUser"
	$DBUser_NA = $selectedBigram + "_NeptuneAdmin"
	$DBUser_NU = $selectedBigram + "_NeptuneUser"
	$ReleaseVersionXML = $xmlValues.configuration.ReleaseVersion
	$PPPXML = $xmlValues.configuration.PPP
	$PUDXML = $xmlValues.configuration.PUD
	$PFHXML = $xmlValues.configuration.PFH
	
	$QRReadPW = New-RandomPassword -length 14
	
	$QRRead_users = @"
#------------------------------------------------#
#SQL Query for QRread accounts
USE [master]
GO
CREATE LOGIN [$QRRead] WITH PASSWORD=N'WRITE_NEW_PASSWORD_HERE', DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
GO

USE [$DB_Neptune] -- Neptune
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PFH] -- Personec Forhandling
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PPP] -- Personec P
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PUD] -- Personec Utdata
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
GRANT EXEC TO [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO

USE [$DB_PAG] -- Personec Anstallningsguide
GO
CREATE USER [$QRRead] FOR LOGIN [$QRRead]
GO
ALTER ROLE [db_datareader] ADD MEMBER [$QRRead]
GO
#------------------------------------------------#
"@
	
	
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for QR Read ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Query created and sent to ClipBoard")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "Queries for QR Read created and sent to Clipboard"
	
	Set-Clipboard -Value $QRRead_users
	
}

$buttonChangePwdScript_Click = {
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$dashboarduser = $selectedBigram + '_DashBoardUser'
	$MenuUser = $selectedBigram + '_MenuUser'
	$NeptuneAdmin = $selectedBigram + '_NeptuneAdmin'
	$NeptuneReportUser = $selectedBigram + '_NeptuneReportUser'
	$NeptuneUser = $selectedBigram + '_NeptuneUser'
	$QuickReportAdmin = $selectedBigram + '_QuickReportAdmin'
	$QuickReportUser = $selectedBigram + '_QuickReportUser'
	$QRread = $selectedBigram + '_QRread'
	
	
	$newpassword = New-RandomPassword -length 14
	
	$SQL_queries = @"
#------------------------------------------------#
# SQL Query for Change password scripts
#------------------------------------------------#

USE master;
GO

-- Declare variables
DECLARE @NewPassword NVARCHAR(100);

-- Set the new password (you can modify this as needed)
SET @NewPassword = 'WRITE_THE_PASSWORD_HERE';

-- Create a temporary table to store the predefined accounts to be updated
CREATE TABLE #AccountsToUpdate (
    AccountName NVARCHAR(128)
);

-- Insert the predefined account names into the temporary table
-- Replace these with the actual account names you want to update
INSERT INTO #AccountsToUpdate (AccountName)
VALUES
    ('$DashboardUser'), ('$MenuUser'), ('$NeptuneAdmin'), ('$NeptuneReportUser'), ('$NeptuneUser'),
    ('$QuickReportAdmin'), ('$QuickReportUser'), ('$QRread'), ('Visma_CurrencyUser'),
    ('Visma_CommonStorageUser'), ('Visma_SchedulerUser'), ('rspdbuser')


-- Declare a variable for dynamic SQL
DECLARE @sql NVARCHAR(MAX);

-- Initialize the dynamic SQL string
SET @sql = N'';

-- Build the dynamic SQL for each account
SELECT @sql = @sql + N'
ALTER LOGIN [' + AccountName + '] WITH PASSWORD = N''' + @NewPassword + ''' ;'
FROM #AccountsToUpdate;

-- Execute the dynamic SQL
EXEC sp_executesql @sql;


-- Confirm the number of accounts updated
SELECT 'Passwords updated for ' + CAST((SELECT COUNT(*) FROM #AccountsToUpdate ) AS NVARCHAR(10)) + ' accounts.' AS Result;

-- Clean up the temporary table
DROP TABLE #AccountsToUpdate;

"@
	
	
	
	
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for Passwordchange")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Queries created - Sent to Clipboard ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$dashboarduser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$MenuUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneAdmin")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneReportUser ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$NeptuneUser ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$QuickReportAdmin	")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$QuickReportUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_CurrencyUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_CommonStorageUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Visma_SchedulerUser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("rspdbuser")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "SQL Queries created for Password Change"
	Write-Log -Level INFO -Message "Sent to clipboard"
	
	Set-Clipboard -Value $SQL_queries
	
}

$buttonNA_adminScript_Click={
	#TODO: Place custom script here
	
	
	$selectedBigram = $global:SelectedBigram
	$selectedBackupfolder = $global:SelectedBackupfolder
	
	[XML]$xmlValues = Get-Content "$InstallDrive\Visma\install\backup\appsettings\$selectedBigram.XML"
	$neptuneDB = $selectedBigram + '_Neptune'
	
	[void][Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
	
	$title = 'Username'
	$msg = 'What is your preferred username:'
	
	$usernamePref = [Microsoft.VisualBasic.Interaction]::InputBox($msg, $title)
	
	[void][Reflection.Assembly]::LoadWithPartialName('Microsoft.VisualBasic')
	
	
	$title = 'Your name'
	$msg = 'What is your name:'
	
	$YourName = [Microsoft.VisualBasic.Interaction]::InputBox($msg, $title)
	
	
	$SQL_neptune = @"

--
-- Datum    Namn
-- 20240326 EbbesNic 	Korrigering. Satte 'se' i default_language när det skulle vara 'sv' och 'SE'
--                      sätts nu i DEFAULT_REGION
-- 20240308 EbbesNic	Skapad
--
-- Detta skript skapar upp en användare med lösenord i Neptune.
-- Då alla tekniker ska ha ett eget användarid framöver och vi inte längre ska använda 
-- gemensamma användare kommer kanske detta script att bli användbart.
--
-- Tillvägagångssätt:
-- Om du har skriptet sedan tidigare med sparade värden ska endast pkt 6 och 7 utföras.
-- Det innebär att helt enkelt köra detta skriptet då här redan finns värden sedan tidigare.
--
-- 1. Skapa din användare i Neptune och sätt ditt unika och komplexa lösenord på minst 13 tecken, 
--    gärna genererat och sedan lagrat i exemplevis 1Password.
-- 2. Gör select från Neptune-databasen där du har skapat din användare manuellt med aktuellt lösenord:
-- ****************************************************************************************************
--    select * from t_PasswordHistory where user_id = (select user_id from t_user 
--        where login_name = '[ange ditt användarid för din anvädare]')
-- ****************************************************************************************************
-- 3. Gör copy and paste av värdet för Password och klistra in som värde nedan för variabeln @password.
-- 4. Gör copy and paste av värdet för Salt och klistra in som värde nedan för variabeln @salt.
-- 5. Spara nu detta skript på ett bra ställe. Lösenordet sparar du i exempelvis 1Password
--
-- **** För att skapa din användare ska värdena nedan som finns som variabler vara ifyllda. ****
-- 6. Hos kunden loggar du in i MS SQL och Neptunedatabasen som ViWInstall eller sa, 
--    nån som får lov att uppdatera Neptune.
-- 7. Kör skriptet för att skapa upp din användare som systemadministratör med lösenord och få rollerna 
--    "Administrator" och "VismaWindowAdmin" kopplade till din användare.
--

use $neptuneDB


DECLARE @login_name             varchar(100) = '$usernamePref'
      , @name                   varchar(100) = '$YourName'
      , @description            varchar(100) = 'Personligt ADM konto'
      , @Role_VismaWindowAdmin  varchar(100) = 'VismaWindowAdmin'
      , @Role_Extra_1           varchar(100) = '[Ange en annan roll om fler önskas kopplas]'
      , @Role_Extra_2           varchar(100) = '[Ange ytterligare en annan roll om fler önskas kopplas]'
      , @password               varchar(200) = '3m7TmaFOVJQ+FF85KzhSl5em8WTVxV73xlspLJrYyQs6edJ6oNufur9rGFrWNQ=='
      , @salt                   varchar(200) = 'tmjkxWdJTrIvvrgNIBkR++zbzdDCSL9ipzZxOANaXJOOFhwIpg4+D6DrjZ4w9g=='

-- Skapa användaren
insert into t_user (login_name, name, description, admin_level, IS_CHANGE_PASSWORD, IS_LOCKED_ACCOUNT, IS_NEVER_EXPIRES, DEFAULT_LANGUAGE, DEFAULT_REGION) 
       values(@login_name, @name, @description, 255, 1, 0, 1, 'sv', 'SE')

-- Skapa password. Ett password som man själv har skapat manuellt i Neptune och sedan kopierat tillsammans 
-- med krypterade nyckeln Salt
insert into t_passwordhistory (user_id, password, CREATION_TIME, salt)
       values((select user_id from t_user where login_name = @login_name), @password, getdate(), @salt )

-- Skapa koppling mellan användaren och aktuell(a) roll(er)
insert into t_user_usergroup (user_id, usergroup_id)
       (select tu.user_id, tug.UserGroup_Id
          from t_user tu
               join t_usergroup tug on tug.Name in (@Role_VismaWindowAdmin, @Role_Extra_1, @Role_Extra_2)
         where tu.login_name = @login_name)

-- Kontrollera användaren
select 'SkapadAnvändare', * from t_user where login_name = @login_name

-- Kontrollera password
select 'SkapatLösenord', * from t_PasswordHistory where user_id = (select user_id from t_user where login_name = @login_name)

-- Kontrollera koppling till roll(er)
select 'Kopplade_roller', tu.User_id, tug.UserGroup_Id
     , tu.Login_Name, tug.Name
  from t_user tu
       join t_usergroup tug on tug.Name in (@Role_VismaWindowAdmin, @Role_Extra_1, @Role_Extra_2)
 where tu.login_name = @login_name
 
"@
	

	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("Generate SQL Queries for Passwordchange")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("SQL Queries created - Sent to Clipboard ")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$YourName")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$usernamePref")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.AppendText("$passwordpref")
	$RichtextboxSQLQueries.AppendText("`n")
	$RichtextboxSQLQueries.ScrollToCaret()
	
	Write-Log -Level INFO -Message "SQL Queries created for Password Change"
	
	Set-Clipboard -Value $SQL_neptune
}

$buttonPPPVersion_Click = {
	
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$ReleaseVersionXML = $xmlValuesVersion.configuration.ReleaseVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$ReleaseVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PPPDatabase = $SelectedBigram +"_PPP"
	
	#TODO: Place custom script here
	Install-Module sqlserver
	
	$sqlqueryVersion = @"
USE $PPPDatabase
SELECT DBVERSION, PROGVERSION FROM dbo.OA0P0997
"@
	$RichtextboxSQLQueries.AppendText("Check Version: $PPPDatabase")
	$RichtextboxSQLQueries.AppendText("`n")

	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pppDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}

$buttonPPPScriptrun_Click={
	#TODO: Place custom script here
	$selectedBigram = $global:SelectedBigram
	
	[XML]$xmlValuesVersion = Get-Content "$global:InstallDrive\Visma\install\backup\appsettings\Version.XML"
	$ReleaseVersionXML = $xmlValuesVersion.configuration.ReleaseVersion
	
	$BigramXMLFile = $SelectedBigram + "_applications.xml"
	[xml]$xml = (Get-Content "$global:InstallDrive\Visma\Install\FDN\pin\Client\Base\SW\$ReleaseVersionXML\$BigramXMLFile" -Raw) -replace '[^\u0009\u000A\u000D\u0020-\u007E]', ''
	
	$databaseserver = $xml.Applications.InstanceCommon.Parameters.DatabaseServer
	$databaseusername = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUser
	$databaseuserpassword = $xml.Applications.InstanceCommon.Parameters.DatabaseServerUserPassword
	
	$PPPDatabase = $SelectedBigram + "_PPP"
	
	#TODO: Place custom script here
	Install-Module sqlserver
	
	$sqlqueryVersion = @"
USE $PPPDatabase
SELECT * FROM dbo.RMRUNSCRIPT order by RUNDATETIME1 desc
"@
	$RichtextboxSQLQueries.AppendText("Check RunScript: $PPPDatabase")
	$RichtextboxSQLQueries.AppendText("`n")
	
	
	
	$resultat = Invoke-Sqlcmd -ServerInstance $databaseserver -Database $pppDatabase -Query $sqlqueryVersion -Username $databaseusername -Password $databaseuserpassword -TrustServerCertificate | Out-String
	$RichtextboxSQLQueries.AppendText("$resultat")
	$RichtextboxSQLQueries.AppendText("`n")
}
]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>