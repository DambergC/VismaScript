<File version="3.2">
  <FileID>ed5ace8c-b444-4ddf-afbf-f623ef62c04a</FileID>
  <Preview>iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACx
jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAFADSURBVHhe7d1ncFxnoub3691ylT/YW/vNVeuy
v7jscijfWtd679rl9dp76965d+/cMDOSZkYSlUhRYs45JzCTYAKYE5gTSBAAQYDIOeec0bkbkQST
pBk9ft8DkmIAJVJDogHw/2M9hUb36RMazX6fczr9GQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAg58J//83+e9xd/8W/zli1bkbdy5Zq8FStWEUIIIWQM
Zc2adXlffTkp71/8i/8yz4ztNj/un/2zf1b50UcfKTYxTZUtftV39amus4cQQgghYya9qnf1qaSu
Q9t37tZ/86/+lR4N8y/3b//Nv8m7kpCqstZuZZS3Kb2shRBCCCFjLGkm2dUuszMf0OzZc3+6ACxb
tjKvui2kzMp2ZVW0EUIIIWSMJtPE7tDHJ6X+dAFYs2ZtXovvjnOlbFMCCCGEkPGU3OpO5dV0/UnJ
qepw5mV/Dnf568Suj7NuZl65NX/autnr2/k83tYsk4r2HsUlpvx0AVi1ak1ei/e2mUGns1KEEELI
eIkdJNNKmhWfWa2ErJqfEXO97Bpn7zq/1uX8tL875w87/Y/HrkdacbPy7eBt1i8pr07xP3de5no3
8+vNNv6wvTkmVR29iktIfrUC0Oq7Y640fLvIszdgk095DZ7hLyeEEEJGYQrq3LpV1KQz13IUm1ys
KzeLfkaKdTmpUOfj85VZ0a4LCQXO709PE2umiU0u0dXnMtwy7XlnzfrYEhCXVmHmm/fUdEM/7e9X
U4au75x+PL9Hlz89r/PX85z5FNa7nW3ONanu7DMF4FWOAKw0BcB/x1zJ5bSbJ2nxK78tqHwz0/yr
ecovbFR+R7c5P+A0l2emrfOYhXvMaXu+WwXmtL3hCxv9KjIpNKfza800Dd4frmOmK2zwmel+mI/9
vajx2fPebOwyh9bJWS+7bcNOZ2OmrX96fQkhhIylFDd6FZdeqWtmMC02O7G51R2vn6pOlZjrnjMD
7Y3cOudncYPLnP/DNHbsyyhrUUph/Q8pqHcOyQ/t6f8wrV2PuFulup5ZZQb/AmWXt5iB2+69D11u
B/Ecc71kc327DDu2phQ2KL2k2VnO0/Oy02YUN+pMnFkns612m/NMarr6X60ArFy5Kq/NP2iuZAZu
M1A7aQ2qMPKyCo+nqKDvgQp2XFTJf/23KvpiowryGlTQ1fNkWrtyeZXNyixtMQO/15zXqcySRrPi
bbqVXazE9EJlVpomVtOqVLNBtiwU2MJQZ1a8sFpZVS6nMBSZwTg9v9RMX6rs6i5nvk/W50+ILR12
oHdKSU2bUrILdSOzWEkZhUo1DWz45ZjzajuUWdzg3C62wLw4DSGEkNGckiafc8j9emqZeSw3Y055
22snvazNjAcuXUos1M28el1MKHAG2vSyVudye/T8Skqxtu8+qkPHLujE6Vgn+w+f1Y59MWYgb1BW
ZceT+dk99Pj0CucQ/qWkYmWZsdOZ16P52el3RZ/SAXP97XtjtC36rDl9TnujY3QuPsdZnp0+vXRo
+vSiRp1PKHS21W5zvkmta+DVC0B78K4ZCL0qMoNlUbPZMzZNovhfT1Tpf/F/qminKQKefhX/uykq
+7P/QSX/7W9UdClHRa4+Z/qS5oCy8nJ19WaxStr6VdrUqrj4NKXkl+jSlZtmoM3W5cRcUxDKFXPi
nJIrulTW0q38slKdOBqjpNJOlZnCkZ1XpNikbCVnF5mN61BpS9A0JbMeTQGVmL31kuagSp0EzPm+
534fms5e54fLQ2a+PqVmFSqj0t4RzF5/bacyCop1+fIV80fMNuXDrEtr94vzaAmpuK5esddSlFUX
VHlraOj69vYhhBAyJlLWEnCer49PK3d2MnPMQGyTXWH32k1JcHZan4/nyXSPpy02O4qXbxSZwbnR
KQL29+yKTnN5p9nz9uvg6UTlmjHs/r37am5qUWtLu77//o86e/6aLicXK7/GLnto+kIz/0RTAG7k
1OnyzRLllLc6BSGrot25PL2kRRt3HFZLc5uqaxp07uJ1Pbh/X/v2n9S5hFyz3nbZj16QaK6XWdKs
i2bd7LbabbY7vfWeO6/2IkBbADpD950BrtTGzKTE3aeS36xQ6Z/9Tyb/TiWz9qgkvlCl//IX5vf/
TSX//e9VUtKq0vZuZ3DMLSxQrBlQc+xhifJKXY1PV2pRmWkgucqralDCrQLTcqp0+WKs4jKqVN7Z
o7SsdJ29mKC00i5VtvcouyBPl830hc3dqmj1KC2nXPmNPmUXViqr3DSknCIlpmToelqpihrdSjN7
8gmPfi82RSC3uEzX4pOVmF1tBnK3bqXnKv5Wus6cPq3zNwqdQ/5lZnCv6upRalqGbpV0qaiy2rlO
QmaFSkwpySsp17UE83tWtbkhW3U9MVOZFa26mZKmG9lVZr6mVJiC5NxOhBBCRnUq20JKMgNtghlw
i814klvtclJY71NscpF27T+j3QfM3vXB89pjsiv6jM5ey3SKwONpc6pcZifUZwbrYjOuNeuy2Wsv
tfMy5+eZy0ubgjp6Pll5eYWKOX1Zs5ds09ez1iont1AXryTqmikfhWZ+dlobu4OamFnlHE2ITSlV
nhnIneXYF/FVmYJg1i05v0GLV25XV5dL+v4P2h55SAfPJjo7pzlmxzW3eih5NS5ll7U6RxIq28zO
rNlmO5Y3+e6a8esVC0BX9wOVtgbM3rCJKQDl3gGVJZo9+n/5t2bA/3OTf63SD1ap5L2VKv3P/sIp
AaUbTqus574qOnqUX1Kk8xeum5aVp4TkFF28ekuZZVW6cilW52OTlF7lVUl1peJv5uhGZpEpA3W6
mZ2nxORMpZoCUGGKREWH2bCCQsXGm+tWNik+PlW5Zs881QziyQVVunY1QSklTUq5laaUIlMyYhN0
q7RZybdSzY1VoesJacoyBcQO1s7lV5PMnn+rEhOTdLOwReVtQ3vylV0BpaRmKjnPrE9iqpmmQ8mp
ZhlmHvb3zCrzu51nYZVuJOcqJSdflxIynacu7PXLH99OhBBCRnWqOruVZAbahIxKZ2DMM3viNiVm
R9MeXq8oq1DA75PP65Xf51VHW6u2Rh5RXq0ZsB9Nm1vtdgZWWwDSSlucn/Z3e769vKw55BSAGzdS
VFhYopOmBByPuajGhgYdO3FOcaZ82EH9ybLNzmhiZrVzqD82pcwUgKGjEfa5e3u5PQJx4OQ1nTkX
q3KzfjlmDMrKytO2PSeUWtzoHK0fmt4e7vcMFYCbJaoyY7HdZjtGNQfvvXoBcPU8NANkSBVPJ3hX
5bF5Kv1fP1WJLQB2z/+/+oU5/Rcmf66yvddUYQpAVVev8osKdD21UtW+B6rpdCnxRqbSisqUeKtM
RbUNZmPNRpaXKz61VPnllTp/KU4Z1W26ZQb31DKXqjvNipu9+grXbdOasnQ1NVdJNzOUZ1pWiikU
yYXVZp7pym/qVmZGpjPAJ9zIUL75I2aY35NzSxRnBunijn5lZmbpVnGFuTxbxeaPn3LzltIq3M6N
U2EaUrUraJabYa5TZm6gDBW29SkrO9cUgBJnj7+o3cwjK1spdh7m9/zGoPIKChRrykthS6+qbFl5
/rYihBAy6lLT1efsTds9bvtUrx04bUpbe7T38EUdPHRcFy9dNTuwV3ThQqxiTp7Vtt3HnSPGj6cd
GuT9umIG2YyyNvOz2PxuXwxvXyvmcZ7SPp+Qq63boxQXl/gkV67EaeOWfUopaFRRg9+Z1qa0KaAb
WdW6Vdikq2aMzDd7/vYF8HZgt08n2KcDVq+P1MWLV7Rt12Gt3LDXnI5VxMZInY3LMtvVqyIzrfO0
vZk+p6LdeSqhxtX3ZLtbQw/MeHbr1QqAu+8bVZoB0g6Sz6T7virNAsp3XlTZ/zVVZf/Lxyr7809U
vvTo0PTmxrULLa6sUkpunarMAF7d7lJqZolyKut1K7ta1Z4+ZWQX6FZ+qVJNE6ts9yolwzQoMzhn
5RQqu9qnWveASmvqFH/jlq7ezFaBvbGKChWblKprielmmhbdiDc3aGKy4tPKVNbmUUJcgvk9xfxe
qvLOXuUW5OvqddPCsmtMC3KZZZSYZdxWXl6OrqYUmuv0mqLRqxp3j7Jyi5Vd5VJ+cbFzncTMClWY
IuM8lWHnkVVlprfbYQ/PmDuPWQ87TXlnv1NWXridCCGEjLrUmbHFDrRJZsAtb+129sRtihsDyixv
16mrmTp5OV0xVzJ08kq6c9pOby9/PG1Bnc8ZVK8mlyqrosP5WdEScs63l9vBPb/Oq4s3CnTiUpoz
L5vjl1LN3n+5c/nQAD+UcnPdm9m1zovQ41IrVOS8WDEw9Ho3ewi/OagbOdU6cTlVSbm1zov+TsWm
m0G+0Dk6YC+3RxGc6c3p/KpO50hCnWfgyXa3d3+j62Y8fTTMv5wtAN7+b1Xd1e+0pWdiB0zfHdX0
mj37wKDZwzen/Sahe2YgHRi63Jm2X7WmCDy5nsvOy8T52WcuezRvZ5p+54/yw3SPrmNS3WH20M1P
WwjsdezvNV23VdfZ5TwlkNdk/qCeO6rt6DS/pym/udfMyy7bxPysstPb03a+j+btzMcM2na+T5bl
XDZ0HWcZj67z/O/OdI8GfGd7np4HIYSQUZ0G7x2lmAE9OadWLYF7qnMNOLGP7w1mLGkNPnDS8uhn
a+ihGr2DzuU/TDugFv/gkwIQa342m7HQnv/48jr3bTOP+8717byc+ZnTzf4flvk4dj3sDnNqUYuu
3TI7n80B5/pD87Jjz4C53l21dj9Uk/nprKfZo7fzrDfTDa3b0PrZy0rqPbpi1qnBjs+Ptruj9ztn
h/rRMP9yK1esyvMNfGdmOrQCL43HXP44ZoAedpo/Nc/P1/ndrldIeaWNqugYcG6Auq6A+b1JFWYP
v96Z5tEf64X1+uGP+NI8uc7L5vGS8wghhIzqOAOk2Zu3h+8TM6qc595/TuJTK3U9rdL5gJ349Crz
e8Ww071SMqqd9bEvSk8vbnWKxY1H5z+Tp6Z/Wez1Yu1TEyVtTnF5vN1dfX98tQKwYsXKPP/AH8xA
escZXO0N1uS/P8pi2lT3t2oOPPo98NzvhBBCyDBpCT40A/eACuvtW7ntW+V+Xuo9g85efb337rCX
v2rselR19A8dITBjWGlzaNjpXjX2NQjNZky0RxHsGG7j6v/+NQrA7T+agX/QaRD2sL79PuHC6jYV
VLean4QQQsjYTVFtuzOuFde1/8x0qKjGjIlVZl7mp/19KMNN++Ox62HX5/H4WmxO/9x5Pb6enU+T
Z0ANZgy3O/HuAZkC8ArfBvh0AbAtwq7Mhg3rtGXzJu3Yvk3bCSGEEDL6sm2bIjZs0OWL53X77kPn
KMUPBeA1jwDYAlBQ1aLNZvDv6enRgwcPdO/uXd0lhBBCyOjK4KAGBgbU0x1S/6B9GuDOn1gAKlvM
nv92PXz4UNb3339PCCGEkFEYa6C/Tz237725AvDtt9/K5XKprKzMWch3331HCCGEkFGWvt4e9b7J
AnD//n0NDg6qr69Pf/zjH51CQAghhJDRETv4f/PNNwoFA6YA3H9TBWCb8/x/KBRSS0vLk4UQQggh
ZHTEjs12rLbfY9B35w0WAHsEIBgMqr293TkCMNzCCSGEEBKe2KMAdqz2uF2mALyxFwFuc15heOfO
HXV3dzsLsi8KJIQQQsjoiB2b7Vjd1dmhvjf3LoChpwC6urpUWVnpHAEYbuGEEEIICU9sAbA76m2t
LeoffPgGCkBVi/MBA7dv33YOLdy7d89ZkD1NCCGEkNEROzbbzwFobmp8swXAHlZoa2tTcXGx8zyD
LQLDrQAhhBBCRj72SL19p159Xa36776pArBtm2kV/c6hBftWQNsybCGwJYAQQggh4Y8tAPZTe6ur
KjVw95s3VwD6+nqdhmEXYksAIYQQQkZP7Phs361XXlaqgXtvqABs27ZVvb09T94JQAghhJDRFTtG
2wJQWVGu22+yANi3/9mGYV8MSAghhJDRGftlQG/mkwCfKgC2YdhXGBJCCCFk9MUWgKHvAqAAEEII
Ie9MbAHo7emmABBCCCHvUka8AIzXtwTa7XqXt5UQQsjYyogWAHtea2urqqurVVtbO25it8d+86G9
MZ/eVvthSONxW5ubm5/ZVkIIIWMvI14AcnNzVVFRoZqamnETuz05OTnPDIr2XRB5eXkqLy8f9jpj
Nfb7HbKzsykAhBAyxjOiBcAurKioSJ2dnfJ4PHK73T8Rj/zBoEKhkIJ+n7mOV36f+TnstK8Xj9cn
v9//0nnZZflecVl2e+zHHj+9rXb77XkdHR2vuK1jIy6Xy/kbPr2thBBCxl7CUgDa29udgcR+Y+DL
4zIDTqdqywuVnpqqwqomebvaVFpZq86fvO6Pxy67o7VJ9bX16jIl48VpXOrsaFVzS5M6zekXL382
dnueHxQfFwD7NMBPb+vYiS00hYWFz2wrIYSQsZdRWwBcbp8Z8Eu1+r1PNGPxYs1dvFDxtzJ0LSVb
bR6fevuG5mmPCHR396q3O6hgsNs5rzcUMHvuXvX09qm/r0ehULf52S23mW+niT/Yo/xz6/TZrE2q
6wgpFAyqr69f/b1D03QPfCN/TYL2Hdisuq4BeVzDr+PjUABeHvuiwee/hIIQQsjIZbjHZptRXQA6
mvK0Y+o+td17oPTjGxR58ooKK+rNIN2ky8cjFbl7n7KLShV/7axOXriupMRYHTx0SBdv5quxpULn
TxzR/mPnlJh4UQcOXVGTyyO3id/TpDMH9mvn1kilFFartrJAJ47uU3TMNbX7Asq7eVabl3+tOWvW
qdl3hwLwVF61ANi/tf2mqaamJueFg1VVVYQQQkY49vG3t7fXeUwe7nF6lBYAv3xdJVryd+/pi+nT
NW3hel26cERfrolWXOxhzVgVofXzPtDmrev0/m8na+/VbGVcM5d/8pF+8+nnijqwSxNmLNeqGZM0
c+56LZ8/WWeyzA3R06uWwjgdOJegmuIUHT9+WVGbFuk309dq47qZOnLqsBasWqkdG2ZrzsoNavaH
oQCY6T1e9/CXhTmvWgDs9ts7XWRkpDZu3Khdu3YRQggZwWzdulUXLlxwvvnvZWPyqD0C0OkcAdit
hr67qsg4p8lTp2v65sPav2eRLlYPqiNjj/ZuW25KwUG1elw6dGCDdkQf14o5H2rtrj3ampKnwoNH
dfZMsTITIhV5JUf37w4o7eQG/cPff6BZMyZrwqdTtWzDJu1JblZ54kYtW/ypIq8V6k5bmrZtXaNa
1+2RLQBm2s72NjXWNf+s1zp0drkVCAZ+cp1/bl6nANgjANu2bXOuAwAYefYpAPtU7Bg7AuCTt7NE
K3/9ieauXKOZi81eeVSkZm85ruzMWC1euUILJn5slrde09cfUG1nk6IjFmrB6vWaMun32nzggLbe
SFdm1BGdO5uvm7GRioor1O1Ag/auWKGYpEI11Vfowt6V+tUHn2vXzXplX1qtw6eOadWKWZr62W80
c8lGtQZGtgC4fX41FCZr+5xDahno1+2+Aee1CX5/UH6fxxQEjwIBM8B7fOo3y+nvCTrvWOjt7TPL
va0eX4tSU7LV2OZWqLtPt808fB5bCno00N+n7lBIblenPL6gAj6v8w6G4dbjZXndArBjxw7negCA
kff4w9tGfwEwg5HLDGw9ZuCwg0fQ71J5foYSrl9XUmaJuU6n6pvbVZUbp3nTJ+kjs/cel1WkhuYW
dXq9aqspV2JCvG5lFZrzmlXf2qbWhka1tLrMAOqWJ9CtnqBLNaU1cnn95ryA3O31qqqoUENrp1qb
atTuDqilMkcJN5JV0dBgBtyfPhT/xgtAwU3tmLlfWTWFOnZgp/acuKK8nBTlllXL01qjW+kpamqs
1bH9UToZl6WmhgqditmvHdEnVFhwQ5/86jc6klShgqTT2rR1n8rqW5SdclGR+w7q8vWranR3q67w
htIKSuX1DPcuiJfn5xQAWzIAACPPDv5jogC4zWDUVl+mSzHHdeTIMeXXtDsrZ7+zOBjwmT1Xt/np
V3Vhus6diVH0yQuqaPUq5Pea8mCu7/U9mtZv9orNgO92yeP3q6OxXFdOn9Lxo0d0KT5LLjONs1dv
5tfZ2qjCilq53PazAYJqrStRdWOLsw0+Z3D86T3kt3EE4ODiw9q5fYnem75e2zbO1rZdq7Ry5wUV
pVxS5MZ92rh1jn7569/qHz/8TGs2rNKvJi5S5NaFioxapzkzlml39G7NXxuhw3siFLF7gyZ99rWW
7YvR9k2rdSq5SOe2RehUYpFzuw63Hi8LBQAAxo4xUwACfUFln4zW17+dqz2712j5hghVdd3W3dv9
ztv57IDuD5p53/tGuu/VunVrdDi9Xg8HBxQwA33Q55bLY/fsg+rp6XWWeffBbTPPKH31/kztOrBP
J87fVIe/W/39/WYd76kl+5x+v2iHGs15981sS6+u065T59TTd8+ZJmQGSH8gpNv9vaYQuMxg9uw6
27yNIwDR86K1I2qTtsY3mHVaoSOXY3Vh3x5FbN+nrPwMzfnk/9XK3TE6fHCfNmxaowWHM9RecExR
+1drz6GbOhU1XyuOJ0mDTVq4Zo4+nLNeyc096spL1La167T76DnzdzO36Wu+VoACAABjx9gpAL1+
ZRw7qsiIS2pqylPU9i26eP2aNm3arA17jqm+06Pkc1FaMH+JbmTcUsTmbTp8LUmH9u/W9ZRUXc2r
UVtFqtJS43T06F7NmTdfB+JSlH3mlCLXnVWjp10dXr88TeXauma+FkTGqCzjkiau2a/G1mpFbV2m
Sb/9/7T97E2V5yQqYsN6XUktUHrSGc1btlHJJY2mZLx4yPyNF4CiWzq89LD2HN6pbVfLlXNplU6n
5CsvabemzN4iX3dIVw/s1LQ5K7RiR5SizOnFh5JVm3lER87u0qa5q7Vly0GtXLdUc2ZM0/4TB7Rs
/VZdLmzXt/e6FLFgoiKPpam7JzDsOvxYKAAAMHaMoSMAIeWdjdbv/+p3mjdvmlZHnVFuTpKWzJyk
X/7dX2vjzvVaGLFNiQmxuh53SivnT9b/8csPdSi+QElX9mn2qRy1pJsBcfcCfTBhhnafPKd1O1dq
7849+uIXv9OsBfN1OjlfZ6KWa82hq4o5vEGL16/U3K3HdP5UpJbtO6uze+Zpy7YV+vCz9zThww/0
4cw5mjVzrqZuOqM2+zSB+8X1fpMFYOhTCNvU3NCspuYmU0w61N7SoOb2TnW1Nam+sUFdHr8Cpsxk
p5lyU1Ird1eb6pra1NnerJa2FtWXlaq8skkttUVKvpWtti6vWpoa1eX2qSjtlGZOWqnCRpf8w2zL
T4UCAABjx5g6ApB66IgO7k41qz2gPVuW67fTZ2l7zGVFrZqk+Qs+1+K9J9XTG1JLWbIWL56pf/pg
kmKu5Sn3VoyWn8pSVcJO7Vi/UFPXHVBtR6eij6zVksW7FLMvRX1/vK87gXZtWfWZYvI8qs88pi8W
zNGMiIM6GLVEJ3I7VXF1q1YvmKDfTZios1fidOTEQc1dtkK7Esp126yf/STB59f7zRYAEzO923kN
g8cpHC7z023Oc7k8j160Z8qAyy1/IOC8M8C+fsFrB3Nznv28fo/PJ6/XvqbBp0DA71zXfh+B35xX
npeq5Pxy53sOhl32T4QCAABjx5gpAP6eoEriTmrSP03Q7FlTtXjPcV05G615sxZq8oTf6FR8hg7s
WKXJE79Q1OmT2r3/hC6n39DONcsVfzNJq6Z/pYmfTtLRY3v06Se/1++/mKg1R44p/XysTh28KU9f
0PkCoPKs65o2ZZI+XbRKCXFntSrqgkoKb2rW9M/08fsf6MilRJ3avUUz587S1sMx2hW1R4dvlqk7
6H1hnW3eeAF4S7GvX/D4As7rGl7lxY3DhQIAAGPHmCkANvatfk2NdaqqqlZ7l9d5YV9DTbXqGpqd
t+55O1tUU1PvHAa372d3e82gbAbZdjO4tTXVq77Fpd62fM1aulbX8qrMnnTA7DX/sCz75T4+n1et
DTWqbepwTtvzvV6P2sxy65ta5DJ7x35Ph/P1tx1ddq/7xwfwsVIA3kQoAAAwdoypAjB0+Nsz9BW6
dpqnfneZy10u99Bplz3tGjrv0dfU2q8Pdq7X1aGm5hbnm/4ez+P55TnTmus53zr46LKh65t52Xk+
Wc7Qde3ynr7+06EAvBgKAACE39gqAG8kQ89524F8+MvfbCgAL4YCAADhN6oKgB087IDg7KmbPfDx
ELs9zw+KdvttKbAD5njaVlsCCgoKntnW4UIBAIDwGzUFwJ5nB8rc3Fzn53iJ3R47KD69zYODg04B
yMnJGfY6YzV5eXlOhrszPR0KAACE36gpADb2K2Ltl9mMt9jtele2taen54VtfT4UAAAIv1FVAOwC
7WXjLS+7cYebdqxnuG19PnY6CgAAhNeoKgDk3QgFAADCb1QVALsi9vuJx1vsdr3L2/p8KAAAEH72
8dom7AXAntfY2Kjy8nJVVlaOm9jtsdv19A1st7WpqWlcbmtDQ8Owd6anQwEAgPAbVQXAvmK+urpa
9fX14yZ2e+x2PX0D23cB2FfLV1VVDXudsRr76YjZ2dnP/F2HCwUAAMJv1BQAuzD71jg7IIy3zwF4
2QcBjcfPAbBvB3x6W4cLBQAAwm/UFYC3/0mAIxs+CfDFUAAAIPwoAG85FIAXQwEAgPCjALzlUABe
DAUAAMJv9BcAl1tBcx17ve5QUG6X/dreZweeF2KuEwgNXScU9DvPs3tNPF6vvG7XD9c3g4/L7VXo
0fx9HvdL5+18VbC5vsdcf7jLX5Y3WQBcbs/QuoYCctvv7Hd5ntw2fq99vYH9Tn+v3M+so7ktgkPT
2AT99iuOX/J9/+Z285vr/9wvSqIAAMDYMaoLgP3aXVdHozISruni+QuKNQtu6TKD8I98/a4dxFyd
zcpKitPFCxd0LSFdlVWVKiivVl1djWqa2p4MkPargjuaq5UUd0UXL15ReWPX0ED6/DxNPF0dZj5V
qmvpePIVwa+SN1UAbFHxdDYo8fJFXUpIU7snpICrRcmXL+nChYsqqG5VKOBWXXmNmsw6Dn0lsr39
mpQaf1lXr13T1djLSsosdL4K+YVB3qyHq6NFpRXVajVF4ueUAAoAAIwdo7oAeANB1WZc0dS/+VQR
u7dp5heTFXU6R7cH+509ea/fDIL+gBlMzDz6+8wevEtuX0CN+Qma8TcTtHrrJu3cc0b5JSUqLClS
5Na12nKlwCyr31ne3fsDyj29X5N+PU0REQu1cvM21ZuNvDd4W7f7epyjDf5Qr27fGdQ3wUYtW7Fc
RzIa9PDubbNcv4KmLLg8fvn9QfV0m+nsDWb2zu2RhceD4pspAGbPPNCmi9u3auWyLVq8eLZ2Xb2h
pOMbNW/mEm1Zt0Jrtm1Wja9dJ+ZtU3xGtVknM8ibgd7dVqPz+9frk/d/ow8nzdWR2JtyB/rMOtxW
n13XLpe6e83tf/eeeuvS9MWCdcpu8unO4B3dNrepLVs/ecTlUSgAADB2jPIC4Fd50mVtW3hC3u/u
KDfmqCK3HFF8UYGqG9tUnBWn1Mx0Re/ZpLVb9qigrkPB7qCqM65r6+xDau4zBSEYUH15vrLzC7Rz
6xrtiK9QZ02mWZdtupRdrKxTMYraliifr1JRW9fr/PV47dy5U9sPn1OzGdwzrx7VihXrlJGfrQ2b
tuhYQqpOHT+gGxlZSiquV1t1lnKyb+rcuWNavnyFDl1Jk8+s9+M96DdSAFxehfxVWvrZ14q+mq9g
wKeGkgStXrdVNd47+v77Qd04uFcnLtxQzPLduv6oADiH+l0ePXjQr6vHDul8cq2+/fa+mkrTtXrF
Cu2+eEu9AbfO7N+oFVsOqa7klqYs26ys6kqd37lVGyOjVN7kke8Vn/agAADA2DHqjwDUZ1/R5//+
HzR93lRN+HCpqqqKNH/bFt0qbdLF/dO1evVKvT9jgw7snKPdZ2MV6jPLK0rQl//+7/X1nFnafCZF
qRejNGPrUUXvj9SeMxc1b/Zv9Zv33tcvv56l4/v367O/+q1mzfpKq6POqiA3SQumfq6//U+/0I6o
HVq0LkJnTx/XhUvHtXLhNP0/732qvZdSFX9pn+acylFzWpSidi/UBx9/rQ17D2nRqgVKKGtXyDf0
vvg3cwSgS55AQE0FyVo55wtNnrJAu6M3K+LQCbV6etU3GFLCzihF7r+omDX7nhwBGLquSz2hTp2O
2q3j10p0x1+rDWvna+eR84rYukwrNqzQsu0HdPrgRq3ZulrT1x/Q1dgD+odf/I1mLt+kW0XNCjyZ
14+HAgAAY8eoPwJQduOSti06pdC3PToVFanz15K0Yc8+5VQ36sy2aVoVsVkrzhSoPm27dp6IUaB3
UNXp17V11hG13+lTX0+PUs/v0bwdJ7Qvapc27t2hiR//ow6cuqK9MYd1cOsBnYzOMDfFgPZuW6UJ
c+Zrx4lz2rNioubN+0RLo8/o3oN7ctVkaPHCKfrrv/9EF5IrVZB6UsvPFajx1j5FblykKesPqcUf
0J49K3UotU59gaFB800UAPtcfmdzrXJKKtX/QGovOKMZc6Zq6ZqtqmgLKPt6pP73P/8P2p+Wr7NL
diklv0V3bvc6L1i0L160BSBm704du1amvtYMzTbb0Rj6Rglnt+gv3/9bHU5r1L3WFE1fMktfLNul
6ynXdfTUfkXMWazDZ7Pl7wm80msCKAAAMHaM7gLg96ky9br2rTkn94NBVd08rz3Rh8ze6iZ9/vkk
zZ09XbsP7NfG8zmqvLVXBy9cNoPVgGqzk7R3eYxaeoIKBYLKvHpEqw+c1+HDe3T4Rr4uRW3VtLkL
tOJAjBLPHdPkf/xE8+fP0IIdpgwc3am5c5fp6wn/qKOXb2jX5uX6+suJ2nvisLbuOaJzN69qy/Il
iruRoKVTJ2vShE+1/8BOsz4fa8KkL7Vw+241dPievFvgjRQAt1e+9jrtM3vsE2cu0FczZuhidoly
Lu826/mVpnz8d/rv/ud/q8sVDbq4fKE+/vxrM8ivVXJpk9l796o72KmLRw7qdHyJ7vQHFBuzRxMm
fq0ZG7YoJytFi+ZP0+Tps3T+0kkt235U8TdPa/XMrzVxwtc6e71cwW7fsOv1fCgAADB2jOoCYNNp
BpW21nZz2iW3q10t7S3qbG1UcWGx6lta1N7Rrrb2TjNdm7luh/Nq9s7OR9d59G6BDjNNq5lvuxlw
27s88rvbVFRYoNrmTvk9HaooLVJeXr4a2twKejpVVpCvotJKdbr9crXUqqCgRG0unzrbW9Xl8aq1
oV4tbe1qqCxVSVWzQs3Z+nruYp1Ozldrp8/M84e3Gr6JAmCfy3d5fPJ2tqgwP0+F5bVy+4IK+Nyq
KipQcXmV8lOTdDMtz9weLSo25+UXFKux9Yd3LNj1aO/odN4B4Hd3qMRsf2VTl3pCQTVVl6igtEYe
r89ZJ7fHo9qSIhVVVMvlffW3BVIAAGDsGPUFwA7oT97X7px2O69u9/m8P3yOvp3e9ejn89cxsYfQ
7e9D0w797vM92ks303rN6R9+dz/63Qx8dtpHy7LzdpZtf5rl2p/O5wrY63W1q7q23hSGoc8ZeLxc
mzdTAIZi37Zo19PnffQ2vkfr7jXr4Q8Gh97D/2Qau87PXvfJsh5tv9cz9DoFjyk1zjztttnpTNmy
ZcDO43XeDkgBAICxY/QXgDGRoQ8JsoXh+cveZAEY7aEAAMDYQQF4y6EAvBgKAACEHwXgLYcC8GIo
AAAQfhSAtxwKwIuhAABA+I2qAmAHDztgPn6x3XiI3Z7nB0W7/bYU2AIwnrbVDuYFBQXPbOtwoQAA
QPiNmgJgz7N7xbm5uc6AaQeS8RC7PXawf3qbBwcHVVJSMu62NS8vz/k53J3p6VAAACD8Rk0BsOnv
71dPT8+4i92ud3lbnw8FAADCb1QVALvA8Zp3eVufDwUAAMJvVBUA8m6EAgAA4TeqCsDjlRmPeX5b
7esAhptuPOT5bX0+FAAACL/Hj9lhLwD2vNraWueFgGVlZeMmdntqamqe2WZ7uq6ublxua3V19bB3
pqdDAQCA8Bs1BcAuzL6K3A6Mzc3NampqGhex22Nf7f/0ttrtz8/PdwrPeNrW+vp65eTkPLOtw4UC
AADhN6oKgH27nP0wmfH03ni7PS/7IKDx9pkHdjDng4AAYGwYdQWATwIcu+GTAAFg7KAAvOVQAF4M
BQAAwo8C8JZDAXgxFAAACL9xVAA61eX2qru3zwwuvfK6XfL6fPJ53GaQGW76Z2On8Zjpvd6h6b1+
nzxmHsNN+zr5OQXADopur0+9ZpDs6w7K7Xr28h+LXXdfICi/z+PM54VpnHn75fV4zO+dj6YPOQNy
t9lme/kL13nFUAAAYOwYNwXA5fHL11GnK6eP6sjRU6ps6lRNRalKaptfaSB3e7tUV1Ku6upmM/h3
qaqgTHWNZoD+E0vAzykAHjP4d9QX69TRIzoWm6w2d0ChoE+u56YbLl4z8JfnpqmgrF4eZ5B/9nKX
KUmN1YWqqK03y/bIH/CpPDNRR44c0bWsMgWDIac8dA1XmlxuBcz0L1sPCgAAjB3jogC4zMAU9HTq
yK5Fmrtqo3ZHLNfxE4cVsTFCGy7mavB2/9Bn7wfNnq/Z+7WDT39fjzntVU9Pr7lsQHe/CejS2p06
eixbt79z6dDMTYq9VaO79wc1YK4b+pl7x69bAOyg7HPV6NCKtdq085CWr12ivRfOK+5qutpMyent
Ndtij3B47Lr3mfnZ7QoMrZvbo1BXo3Yv/lhztl1ToDtkbu+hz+fvCQXkNoP/3YdS3sXl2nv+mkK9
A6rPv6ENM1co+lC05m9cozNXE3TzVqn5ow/dZn09Iec2Gxi4o15PnS6cv6HmLs+wRyUoAAAwdoyL
AuDxd6sm65xmrN0nd/99DQ70qqerTts3rdG2a6VqqUjVuvXrdexahkpzErRuwyat3XVUpRVFOrB/
hxYtXqzzeYW6vi1aJ07maOBbl44t2KWrcUnavXO95sxdqDMpBWbv1/9Ke+FP57ULgNsnX0eh5k34
WoeuZavTDLYVKYf0l//x14rNKdepvWs0b9V2lVdX6Nj+rZo9d56iLibLa9bNDtQ1BTd1eP8JnThm
tq+xWedj9mvJkvnade6WOptLFblhiT7/zX/Q9vOpGrh9R6U3jumLCYuUUdNklt2pU5um6O8nLNXF
2NOKiIhQ5ImrKi/L0Nr1G7Vn1xr93V/9k46nVSkU8D6z3jYUAAAYO8ZFAfAG+1QYH6XZe88oFOp2
ng54OBDQ3h2btOPkOc2a/it98PuP9MtPpupKSorWL/hK//C3/1E7927V+5/P1/GYaG0/sFxHN8To
zOk83f6DW6eW7teFQ3v1y49n6dLFo5q1bp2KmwPyveZTAq9bAGy8wZBaSpK1av4MfT5lnvaeiNLy
ZTsUtXeVluw+pcRzu7Rq0zK99+EUHTp7TovXLlJieZdu93cr6dgWnUjKUdyxvToTc0qTJk/V1iOn
tGvLTG2K3Kb1Ry7rxOZJphDcUMAsJxgKKevyPk2dPkNfr4wwy9isNdsvqDDrgqZ9/pl++f6vtDPS
3E5TNqqwKF7zZq5UWmWr/F73C+tNAQCAsWNcFAC3N6C28luas3S18pu9CrkaVZ1/Uxu3bNOGqD2a
8vl7Onjuuo4eP6rVW1Zqw+FzOrjmC23askaTNxxXbWWq9kUv05kDJxRzJVWDfc1av2aHLp07qSlb
TqnHXaY569eYvWSP/J63WwBcbo/a6sqUnF2sgW+kiptRmj5/nnbsuawDO6dra2ypumviNWPZHH25
OlqtrlZt3LZcZ/M79KC7XuunfKjfTZymrz99X7PmLNSkFTuUWVWjM5GTNX/FQl0u9yn3xHztPBnn
PD1QVpCp7Ko26dsBndy9QNMXRSgmJk579q9R5PHL2rjoY63fslkzd8eq31emdWujVdXukXeYvxEF
AADGjnFRAGwCgZAyru3R5MlfasbkiTp5MVaHDx/U8ZRiJR7foy+nz9LSPccVe/GQ5k+bp8kT3te+
Q4e0Kuq8qsrTdezYLlXWl2vP2q813Vx/xclEsxd+XX/517/QxC8maefZOHl9QbNuwy//ZXn9AuCV
p6VKkRsX6csZc/T5vKW6VZiuTV8v1P6j57Vq+UxNnDZXiTcu6KPf/pM++vxzrdp/XO5Qv+ozrmrn
tuNq9tvXLDQrZsN0/X7+TuVXVelyTIRi4+M0a+on+ui993QoLke9vX2qyUvQ3NlfadbMaVoQeUC5
KZe0aOJS7dyxQbNmzdMXkz7XgWPHte5IvJm+QesnzVT0uWwFul98OoQCAABjx7gpAF1dbgV8PjXX
16iqpl4ub0AeV6e67CvdfS7V1daotcOtoM+jxtpq1TU0m8tcTw1infJ4/epoaVRVda3cgT61FcRq
0rLtKmlodS7zvObgb/O6BcCuh8vjk8/VoRozcNc1d8jv96u9uVntHWba1gbVNLvU05SnaUvWKamk
Tm6PX163GYDbO9RlpnG7zXbZjxjuajeD8uMXLrrk9XrU2lCr+mazXPtUhn0LoM+vzlazzVXVaun0
yu91qaWpxZlXXU21Guy0j9bR/uxobVGzOc/eds+uNwUAAMaScVQAbMzg5/E4b3+zA7udj7PHbn7a
89zOfJ+axrl86LzHy7QD5+NpOzva1NjS5kz/unv+j/P6BWAo9p0Ndj08Zn3s70++M+DR+rk629XY
3Oq88n9ou8z17OVPzc/Ow5aBodP2py0HdtvtvH5Ylp33M7ePs6wflu8s99F87fKfLO+5UAAAYOwY
ZwXgDceshx0sh73sFfNzC8BPZ2jdXvddCW8zFAAAGDsoAG85b68AjL5QAABg7KAAvOVQAF4MBQAA
wo8C8JZDAXgxFAAACL9RVQAKCgrU2tr6ZDAZD7HbY7fr6W21228HypaWlnG1rbbQ5OfnP7Otw4UC
AADhN2oKgD2vrKzMGUDsHrMdIMdD7PaUlpY+s82Dg4MqLy9XXl7euNtWe2RjuDvT06EAAED4jZoC
8HiB9gtoxlteduMON+1Yz3Db+nwoAAAQfqOqAJB3IxQAAAg/CgAZ8VAAACD8RlUBsM+N29jLx0se
b9Nw2/uuxt4uFAAACK9RUwDseVVVVc6LyewLycZL7PZUVlYOu83vaigAABB+o6YA2IXZV8U3NjY6
byezb58bD7HbY7fr+e19l0MBAIDwG1UFwL4lzr6f/MkX34yD2O15/oOA3vVQAAAg/EZdAXgXPgnw
XQ8FAADCjwLwlkMBeDEUAAAIPwrAWw4F4MVQAAAg/MZtAejscinY3fdk/n09Ibm6Ol8+bSAgr9tl
Tr94+Z8SCsCLoQAAQPiNzwLgcpvBvE03zh3Urt27tWf3Lh08c1XNXV553C9O6+tqUXpmliqa2s3l
b/boAwXgxVAAACD8xm0B8JgCkJVwRktnTtLHXy7V2YQUdXhD6uvtUU8oJI/Ho2AwpO6+23rordT0
+Yt0Jr9Fg7f71dPTI5/XbQanYeb9mqEAvBgKAACE3/gsACb2sP7A4B3lXD+l/Wdy9M0fHqilLEOL
507XrC371W4GnjNR6zVt5mKlZ6VoxdpNupRboDNb1mr+/MVKLGhUwOcZdt6vEwrAi6EAAED4jdsC
YBMM+nTz/CHtOpaiwb4ObV8/Xftic3Xx5GZNnvellu06ptK0C1q2YbG+WhGpi/EX9cVHv9L0hat1
JbVC/oBXrmHm+zqhALwYCgAAhN+4LwA3zkRr26FkDfa2aMOKiTqf16GsuCi9N/E3WnP4igINmVqy
br4mzN+ok9ev68KlY9q6YLbWRFySZyAk9zDzfZ1QAF4MBQAAwm9cFwC/36usxIuKuZytnoFeVWRd
15TJEzVxxUZV1tZo36bFmjhxii4lXlf04RjFZ93UjvlTNHXiNJ2+VqRAyMcRgLcQCgAAhN+4LgA2
brfHeWW/fUGfz2cG9I42dXR5TTnwy+fuUlt7p7w+c9rjltfrk8dcp72jUx77/D8vAnwroQAAQPiN
+wLwfOy8H8//+dPPn/cmQgF4MRQAAAi/d64AjHQoAC+GAgAA4UcBeMuhALwYCgAAhB8F4C2HAvBi
KAAAEH6jrgDY7893u91Pnosf67HbQwF4NhQAAAi/UVUA8vPz1dzc7Ow1t7W1jYvY7bHb9fz2vsuh
AABA+I2aAmDPq6ysVEFBgYqLi8dN7PZUVFQMu83vaigAABB+o6YA2Njzx2uG2953Nfb2oAAAQHiN
qgJA3o1QAAAg/CgAZMRDAQCA8KMAkBEPBQAAwo8CQEY8FAAACD8KABnxUAAAIPwoAGTEQwEAgPCj
AJARDwUAAMKPAkBGPBQAAAg/CgAZ8VAAACD8KABkxEMBAIDwowCQEQ8FAADCjwJARjwUAAAIPwoA
GfFQAAAg/CgAZMRDAQCA8KMAkBEPBQAAwo8CQEY8FAAACD8KABnxUAAAIPwoAGTEQwEAgPCjAJAR
DwUAAMKPAkBGPBQAAAg/CgAZ8VAAACD8KABkxEMBAIDwowCQEQ8FAADCjwJARjwUAAAIPwoAGfFQ
AAAg/CgAZMRDAQCA8KMAkBEPBQAAwo8CQEY8FAAACD8KABnxUAAAIPwoAGTEQwEAgPCjAJARDwUA
AMKPAkBGPBQAAAg/CgAZ8VAAACD8KABkxEMBAIDwowCQEQ8FAADCjwJARjwUAAAIPwoAGfFQAAAg
/CgAZMRDAQCA8KMAkBEPBQAAwo8CQEY8FAAACD8KABnxUAAAIPwoAGTEQwEAgPCjAJARDwUAAMKP
AkBGPBQAAAg/CgAZ8VAAACD8KABkxEMBAIDwowCQEQ8FAADCjwJARjwUAAAIPwoAGfFQAAAg/CgA
ZMTzuABs3bqVAgAAYXLv3j0KABnZ2L+/vR9ERUU5BeDBgweEEEJGOP39/RQAMrKxd6yenh4FAgHn
zmfvD4QQQkY2g4ODevjw4UsfpykA5K3E3rns4afn75CEEEJGLsPt/T9+jKYAEEIIIe9YKACEEELI
OxgKACGEEPIOhgJACCGEvIOhABBCCCHvYCgAhBBCyDsYCgAhhBDyDoYCQAghhLyDoQAQQggh72Ao
AOStxt4P7EdREkIICU9eNh5TAMhbjdfrlcvlktvtJoQQMsKxj7/2O1nsYP/84zMFgLyV2DtWKBRS
cXGx6urqCCGEhCFVVVUqLy8fdkymAJC3EnvHCgaDqqmpce4P9jQhhJCRjc/nU3V1NUcAyMjlcQGw
dzx7+MneCQkhhIxs7NMAFAAyoqEAEEJI+EMBICMeCgAhhIQ/FAAy4qEAEEJI+EMBICMeCgAhhIQ/
FAAy4qEAEEJI+EMBICMeCgAhhIQ/FAAy4qEAEEJI+EMBICMeCgAhhIQ/FAAy4nlcAOzHUFIACCEk
PLEFwD4OUwDIiMXesXp6epzPoLZ3PkIIISOfiooK5yPZhxuTKQDkraa/v199fX2EEELClOEem20o
AOStx97JCCGEhCfDPS7b2MtGtAAMDg7q7t27ozqUF0JeP/bBZLj/T+MhP/YgSsIb+3g93N+M/JCX
3X9HtADYhXm9XrW1tam9vX1Uxq6bfeEE/+EJefXY/y/2NR/D/Z8a6+no6FBvby+PCaMw9m9iX2w8
mseUcMfef+3TAMPdf+15I1YA7Hm5ubkqLCxUaWmpSkpKRlXsOhUUFCgvL885UvH8+hNCho/dy2hp
aVF6errKysqG/f81FmO3xW6TfSC12zjctpPw5f79+86L3LKyssbV/e5Nxd4maWlp6urqGnZMG9EC
YBdWVFQkl8vl7GXbowE/GY9HnmHO95jznz/vT41dJ3tDFRcXD7v+hJDhYwfH5uZmVVZWOm/7HO7/
11iM3Rb7Tha7h0kBGH25d++ec59rbGyU3+8f9m/4Lsfef20J6OzsHD0FwLZpWwLsYPsqsdN6bWFw
u+R2m0Jgfg433dNxe7zy+zzq6hz+8uFil2P/o1MACHm9PC4AdrC05Xy4/19jMXZb7JFBCsDozOMC
UFdX57zffbi/4bsce/+1RwLGbAFwmYG8u71Ka2ZP1/HMWqVfjtG5xFIzr1657OVun0KhkHwet7Ox
bpfZaK9PHS31qqhqNKdf/U5BASDk54UCQMIRCsCPZ8wXAK8/oLrcVC2ZPlk7jyfo0rFdWrnlqNKL
iuUKhuRuqVRCQoIqW9rU0tSolrZOUwLadTl6tSbO3qFmv1+eVy0bFABCflYoACQcoQD8eMZ8AQgE
g7pxeqsitu3T5nXLtX3bJv1uwjRNmTdD+67f0NnIGZoybbIWRG7Rpo07lVTQqOy4o/rtf/pr/cNn
S1XR4XWODgw37+dDASDk5+V1C8Cr/v9/nGemN6ddrmcvHzZmOvejpwtfd3mPQwEY3fk5BcBlprPT
OvehV70v/Yw8fZ+zp+0ynfzM++LPyRgvAB51B5q1bclkTZk1Tx9/9KEmTpmn0ymt8tfc0FdfTNb8
dUf04Nugdi6fqy++XqnMGo/y4o5p2tRF2ncmXX13utVlNn74+T8bu04UAEJeP69bAJ48AA9z2XBx
pn902uV6lQdR84Drsf+f2+WzRwFf4XVDw4UCMLrzOgWg08TvC6izrUn1DY1yefzymp3DtzMgDw34
j0+7XB1qbmpUQ0ODmlrbnPNevM4rxtz//X7fk/8PP5YxXQA8gW7VpZ7S4k375b8vuQtO6v/+H/9c
v528Ues3LNemwzGKiphhTq/Ugi07Fb1+o+Yt3q51i5dqzqxZmj03QqXtbuePPNz8nw8FgJCfl1cu
AObBq9vXoKN7onUjr37ohbpur4KhbgV9XvMg7ZIvGDKPIUF53eb/pCeoOz0tOrzngDLKms2DlV9p
sSd18Eyq/N1+M08zfcBMHww4D4hu86AeMvMavDegW0eiNHf5RqWm39KunYdU0uh2PqsgFLAPnq+2
U0ABGN15nQLgM+NJedZZzZo2QTOnfqF9J87p0tkT2n4hXd299j43dB+099GgOR1y7lOd5j7lcy4L
OC8q73SKhM8ffHSe1yzXo6C5z4ZCQec1aN5gn0KtxYo5tkllrX3q6+/QsUXzNOHzyZo6dYrWnbyh
7p6+J/O09/mAuc922/ulWXYgEHQ+28C+it+ut31Nmz1t/490h0LydLaY+2SNOn9ie23GdAFwm5Wv
Ly9SfmGZukxz83Y16NqpUzoQvUfRMVfVYf6greU3tXv3HmVUmKbfUqLDUXsVczpRxSU5ijt7Tvm1
rRQAQt5yXr0AeNTnr9WW5Wt0Ia3aPMgG5TP/r5PiYpVeVmsegDuUl3xd1+NvqaEzKE9btdLijmrK
lKVKKmnW7f6g4o/v1Ia9cQqaB+2Az63izARdTc6U2zzudDYU6+q1a0rLS9Scjydp+5FY3bx6XPMW
bDEFoEUFafG6mV8ht9//SiWAAjC688oFwO2Tr7VUy5cv1dWCenV7zCCak6zonRGadzjZlMwOxV+5
rJQic5mvU5nx8UpMy1KXv0fupgpdv35d+ZXNZs/bK6+rXXkZyYqLu66cskZ1tDcpKz1R126kq83b
rbbafF0+tkPzl05TSfugenvrtO/rrcqscpv70B2FvF0qKy9UfNwVZZa3qjfoVuaNK7qSWiiXu1N5
OalKuHFTlTXVzuBfV1OkitpqpSfFKS6lUE2lCZr0+Rwll7fI7/3xo22jsgDYTyZyDumZAffH4myA
16+Ac7jD/Gd1edXT3+/Mq7+322lbHl/I+T1oHgjsIZ1+c7rPXOb3B9TT2yufZ2g+w83/+dh1suWE
AkDI6+V1CkCvv0471kTockatBvr9unpgkWbP/EqfLV6lgoZGXYlcqt/+43tavfeyYnbN1OKFM/S3
H89Rkin5t/uCSozZo837E9R3744qUo5q8exPNGnWTEVfi9fxTV9r4ar5+mDC7/Uf//IftWLjbm3Z
uFZL15kdg+gIffnp+/r7jyfr+I1ys8c29LkfPxYKwOjOqxYAtxnIm7LPauaWfWr39jp77YO3B3Tp
0FatOnZdl2N2aMrcZZq7bq1OHtuuD//h15q6dJOKy6u1bdMCffjh7/S72StV2OLXQMija8e2atKn
H2rSgiU6HL1d/zhhihYsnKpTV2O1fu1CzZkzWZ9NmaFKl73PtGr3F5P1yZczzDSLdD3ukiZPmqTJ
s2dp5eaNunz5lKbPW6DZq5br3Jn9+tV7E7Vt72Yt3hCpspoqHVi7UZE7V+pvfjVJCxbN09Y9q/W7
33yqCzl1CppCMtz2Ps6oKwD5+flqampyBlr7n2o0xa6T/UAJ+2mAFABCXj2vVwBqtWPtFiWV+aXB
Rq2Yv0otPX06v2+TIrZG6eCWSK1fPlMTPv9K89ce0N3vurXTFIaEwiYNmAKQcHKvIk9mSXqoMzvW
6GhSg1xl1/TlZ19q0aYY/VE9Or5xteat2KuU1CRFLFuqVes26Iu/+wdNnL9OG5fP1/4LGfIFA8Ov
41OhAIzuvGoBcHmD6iy/oVmrtqjOe0d37/Sb+2GnzhzaqaXbI7V8zXR1DEq3Lu/U12u3KnL3OjPw
H9TVU7v16/d+oU079mihuQ+m17jU52nV8eNbtX7TFs2Z/nut3rhVK88UqSX3gNYtm6A1x+J1t6dF
+7fPM4Xhtvr6GhQ9bb3O38hVTV29PDVpmrwgQoUN9Tq7+0t9PmOi4mrMqPsgoPzrh/XpsgPq/mZA
l/dGK2rPbp29lqYLh3dobWydBluTNGnNKu2JuqL2QFDun/icm1FVAOx59o9lB1i7lz0aY9fNfocy
BYCQV8/rFID+UJM2z52q6Uu36PDxo9q0cprWrF6kOWsjdGDnHs37ZJkpAIv12SLzQLxhtnPZBx99
qaTyDt0e6NHNE5v14SdzdeTEUe3atkIrls3U/MVLtSvmjPatm6cdkZs0/espmr5gs67FX9XaRfM1
b+V27YtYqbUrV2v7/iO6mV+vgP/HD5/aUABGd161AHR2utTTHVD8me1avmWLzh7brZjTJ3TkUJRW
Hrqkkwc3aOHa7Vq8frn2HDT3lR2bNPm9L3TydJy2rFqqzXv3a0P0ERU0+9TXUaTli2Zry25zX536
e63atE3LYrJVmrhZkXsjtHLdcq1aPkNfTpyi8i57n2lS5KcztHR9pA4fOarLZw7r8yWblFVaqKOR
M7QjOsrcPzdo3bYIxRyL1Gcrdqs5NChXXZwmfva1cis7lHBio/5p2mqt27BYu88c0tJJC3XhVoX8
gTF0BMDGroS9bLRnuHUnhAyfVy4AXS55vS4VpV3Xgf1R2nf4jApL83XuWLSuZlSq2+/SzbPHFH3w
mFJL6tVckaVD0dG6ciNNLe1d8vq8aq7K14mDB7RvX5QSswuVGX9cB88myt9ry8FO/f7Xv9C/n7Ve
aXkVaqivU2FejrLzy5znamNjonU4NkUtLp/zFOLw6/hDKACjO69aALxej6pq6nT53DEtmPKhfv/h
h9q454hOHz+kvOo2+dqqdNgMxOdSSxToatC5qGgdvRSvDn+fWs19MDoqSrHpJc79z2sG3cr0RO03
98sYM01xaZnyK5vUUlugyvpmVWRfU3T0fiVkZKnd5ZfP3KcLk68500ft26ezV28oo7BUTS3NKivN
U0dHu66a+2XUhSQ1N9Upo6BMXr9bSad3acGcHfLcGdTlfcv1V58v0PFryXKZyzIuXtLNzAp5fqLE
jroCYGMXOpoz3DoTQl6eVy8Adm+sS/5gt/r7+9Xf1+O8Naunr995FbR9X3aot89c1uc8v+kxl/WZ
6XoevcLaPpC5vX7nPHv9UMCvQMhM39ctn7k88dwJ7doVqWv51QqZxyH7XSL+QMB5HZF93re7t199
3WZevAtgXORVC4D9noCCgnytWx+h7Tt3mfvILm3euEH7Dxx07mcuj9mzN/en3qC9D3qc15o5rzOz
7wIw90F7X3Pun+b+Z++/9p0q9rw+M3j6fT4FvEOvQfOZ+4t9t4Ez/aN3ETj399Cj+7tJj7n/Be39
0eWWz8zbrre9X/b3mPul844Cc3lXk86dPKTEvHr1hXwqyklXanmL7t3pM+vkUrCnx8zD/D8bjU8B
2A2wM7dfQUgIGf+xhd++fsYOlvYFtfaFviOddpPHD7RB84Dc0T70Vah/Suy22KcG7Tcd2m0cbttJ
+GIHNVs6a2pqnAFvuL+hjX19lx1oHw/CTwZjM5AON324097R6bztL+B1qc2su303gD3d3j789C+L
vf8+fuedHeyfv/2c26A79GYKQGF1q7Zs2ewszL5v0d7ghJB3I3Yvw/7ff34vZKzHbpNz5GGYbSbh
j/372MFuuL8dGbr/2p/D3XY2Pq9HfXcevLkjALZV2Wb29GF1Qsj4zuPXzwx32VjOeNym8ZTxer97
U/mx28Ze9pZeAzCowbv3dO+uLQLPPu/wqrlt5mGf43HmMczlj6e5Ozj0egN7evDRaUIIIYS8PLYE
vPECEAr16OE39+Vub1Jje5fuPfxO3zy4p4H+oQ/xGRjoN4P1XX3z8L5z+vmVsrEr1tcbVGtzo5q6
PLpz/55u9z83nZ2mO6RAd48z/cBAn3P04fHl/Wb6e/cfmAJxxzn9zHUJIYSQdzhvoQBs08DggFry
ErRk2gxNnbtQpy7mqL7NrbsP7uub7/4o6053l0ormnXv22+cAXrg9qDu37+rew++0ffmnzSo2G3L
9MGnUzRjSYSuFbTrD+bc77//Xg/tdPcfOvNJObZU/+mzzfrOXHpp6wy9P2OXuaad0OQP99RQWW4K
RI/++P0fzXX/oPt3b1MGCCGEvPN58wVg+w49fNit01uW6sDFIumPDxS7e7F+M2m9XD0hlSRfU9zN
IuUlHtMHv5+r3NpmdbiCZk/ercamLrXXF+rK5WSF+kM6tWy1zmR1ypsTr+1bLqutqUhXY6+qosmj
1qZqZaSlaf+O9frok3mq83kVteg9/Xr2cfndtbpmpsuraFJpfq4y80tVnJ2sM+evq8Fs3b1B3upH
CCHk3c3j10688acA+szefHdjljYv+ErTl0fq5NHN+mjiOvn6/aYMrNBvf/ORvpoyS19OX6YDB/bp
4KVSdbdmaEPEXm2YOVG/nTBDVxNKdXn7Qv3dbyfpi49n6VRys1pzTmvyZ+/rq4URWjpjhtZtOapj
B6K0fHmEdh+K0f6IJdoQnSBXQ7oWTv1UH0xcpO279mv5nNn6auYqbVu1SOt2J+rudw9f+poCQggh
ZLwnFAqpt7dXfb09b7YA9AQDCvT06g/6o26ejdann87R0aRyuSuStHv9Pu3ZtNQM/ot0+HKmsuNj
dPBine4H8rVh035dvXhYEes36NTlW4rZtFFHEqrVVhCn1UtWKWrHQR05vFuTv5qqBSt2qbX7jtIu
HteB6BgtmfS+Nuw/rb17DujUnigd2x+t6VOmafHqTVo0b6VOpTTrnjtbazacVO83D3VnmBuEEEII
Gc+xe/337993Pj/BfsDVQH/fmysA27dv190+vy6diNDcdZu1eE2EIqMitXzZel04dkJLJ6/WqiXL
9NXSlVq5ZLUunT+rOZOXaO3qNVoVcUCXd+/SjImTtCvmqs5sXqZPpq/QuhVrtWPXMa37aqV2bo3Q
51PmaeGaPWaFg4o/sV9n47OUciVeGVlJ2rZ9n3bMXqutG3foazvdWrMOC1br9M1a+RuStWbTGfVR
AAghhLxjsYO//Ywe+7kJ9sOt7CcF9vf1vuEjAH19uh3sUvL1OCXnV+nuvR5V5OWq1e1XVU6KEm5m
qKmrU3XFBWrqcKm84JZuJuertTMoX3ONbt5Mlat3UMGOGiXdiNf1lAJ1D34nT22REuITVFzdqNa2
TnX39cvb1aEub4/+8P33Guz1qa3Dp2Bno1Li45VdUq3W9g41N7fK5etWX7fPXM+lgTu8BoAQQsi7
E/uCP7vnbwd/+9HJDQ0NzgcEvdEjAM7nAIS6NXjvvr77wx/03TcPzIIH9eCbb3T3rvn57Xf6w3ff
6v69e7r/0L4D4K4efvOtvvvOnL43+Oh63+muGaQH7z3QH8w8/vDdQ+e7m+8+eOjM85sH983175r5
DmjQXN9+DoD9SEO7nMfz+NZM961Ztv0cgfv375lpzKDvXM7neRNCCHl3Yvf87Uf0V1RUOHv+dvCv
r693PuHyjRaAiIgNzgcB8UmAhBBCSPhjC4D9jJzW1lbn43/twG+PBNgvSXpjTwHkVzbr4oVz6u0O
Db2y0L69gBBCCCFhjR2Tbw/0OwO+3et/HPvthP2Df+J3AdSbKzZ5BsyMHjpfLNB7+57TKgghhBAy
GnPPjNf3FRx4aArA7Z9fAOwVG73mp4ltEvWEEEIIGdWx4/Xjvf8/qQAQQgghZOzmlQvA6tVr8u9+
L3luy7kSIYQQQsZuBv4o3UrP+ekCMG3a9FI7YfyNVKcxEEIIIWTsJsWM6fuiDvx0AQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPiT/dmf/f+hwCOL+jpk
mwAAAABJRU5ErkJggg==</Preview>
  <Form>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</Form>
  <Code><![CDATA[#requires -version 5.1

$currentVersion = "v2.0.3" # Replace with your current version
$updateDate = "2025-06-12" # Replace with date

$ScriptDate.Text = $updateDate

$ScriptVersion.Text = $currentVersion
$repo = "DambergC/VismaScript"
$file = "CygateScript.ps1"
$configFile = "Version.XML"
$localPath = "$global:InstallDrive\Visma\Install\Backup\CygateScript.ps1"
$localPathVersion = "$global:InstallDrive\Visma\Install\Backup\Appsettings\Version.XML"

$Elevation= Test-Elevation

if ($Elevation -eq $false)
{
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::OK
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "You must run the script in a elevated Powershell Prompt!"
	$MessageTitle = "Not Elevated"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::OK)
	{
		
		$MainForm.Close()
		
	}
	
	
}

if ($latestTag = Get-LatestReleaseTag -repo $repo)
{
	Write-Host "Working"
	
	if ($latestTag -ne $currentVersion)
	{
		#$latestTag = Get-LatestReleaseTag -repo $repo
		
		Download-LatestVersion -repo $repo -file $file -localPath $localPath -latestTag $latestTag
		Download-LatestVersionVersionFile -repo $repo -file $configFile -localPath $localPathVersion -latestTag $latestTag
		
		$todoScript = "New version downloaded, PLEASE restart script"
		$promptRestart = $true
		Write-Log -Level INFO -Message "New version downloaded, PLEASE restart script"
		
		#Restart-Script -ScriptPath $localPath -DelayInSeconds 3
		
		
	}
	
	else
	{
		$todoScript = "Latest version of CygateScript.ps1 running"
		Write-Log -Level INFO -Message "Latest version of CygateScript.ps1 running"
	}
	
}

Else
{
	
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::OK
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "You do not have access from this server to download from github, please download manually!!!"
	$MessageTitle = "Script and version.XML Not Dowloaded"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
}

Install-NuGetPackage
Install-SqlServerModule -TrustRepository

$MainForm_Load={
	#TODO: Initialize Form Controls here
	#Requires -Version 5.1
	
	$TeliaLogo = @"
████████╗███████╗██╗     ██╗ █████╗                                    
╚══██╔══╝██╔════╝██║     ██║██╔══██╗                                   
   ██║   █████╗  ██║     ██║███████║                                   
   ██║   ██╔══╝  ██║     ██║██╔══██║                                   
   ██║   ███████╗███████╗██║██║  ██║                                   
   ╚═╝   ╚══════╝╚══════╝╚═╝╚═╝  ╚═╝                                   
 ██████╗██╗   ██╗ ██████╗  █████╗ ████████╗███████╗     █████╗ ██████╗ 
██╔════╝╚██╗ ██╔╝██╔════╝ ██╔══██╗╚══██╔══╝██╔════╝    ██╔══██╗██╔══██╗
██║      ╚████╔╝ ██║  ███╗███████║   ██║   █████╗      ███████║██████╔╝
██║       ╚██╔╝  ██║   ██║██╔══██║   ██║   ██╔══╝      ██╔══██║██╔══██╗
╚██████╗   ██║   ╚██████╔╝██║  ██║   ██║   ███████╗    ██║  ██║██████╔╝
 ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚═╝  ╚═╝╚═════╝                                                                                                
"@
	
	
	$group = "Visma Services Trusted Users"
	$groupMembers = Get-LocalGroupMember -Group $group
	Write-Log -Level INFO -Message "$currentVersion"
	
	if ($groupMembers.Name -contains $currentUser)
	{
		
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$TeliaLogo")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$global:CurrentUser is a member of the $group group.")
		$richtextbox1.ScrollToCaret()
	}
	else
	{
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "You are not member of local group with rights to run this script"
		$MessageTitle = "Not authorized"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
			$MainForm.Close()
			
		}
	}
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$releaseFound")
	$richtextbox1.ScrollToCaret()
	
	if ($promptRestart -eq $true)
	{
		
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "New version of script downloaded, Please restart script!"
		$MessageTitle = "New Version of Script"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
		
			$richtextbox1.AppendText("Script will be restarted")
			$richtextbox1.AppendText("`n")
			$richtextbox1.ScrollToCaret()
			
			Write-Log -Level INFO -Message "Script will be restarted after new version downloaded"

		}
		
		
		
	}
	
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$todoScript")
	$richtextbox1.ScrollToCaret()
	
	
	$drives = @()
	
	$drives = (Get-PSProvider filesystem).Drives.root
	
	foreach ($drive in $drives)
	{
		
		
		if (test-path "$drive\visma\install\backup")
		{
			$result = $drive.Substring(0, [Math]::Min($drive.Length, 2))
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText("Backupfolder and script located on $drive")
			$richtextbox1.ScrollToCaret()
		}
	}
	
	
	$date = Get-Date -Format "yyyyMMdd"
	$Global:InstallDrive = $result
	$global:filename = "logfile_$date.log"
	$global:filepath = "$InstallDrive\Visma\Install\backup\"
	$global:logfile = "$filepath\$filename"
	
	
	$SavePathExistAppsettings = Test-Path -Path "$InstallDrive\visma\install\backup\Appsettings"
	
	if ($SavePathExistAppsettings -eq $false)
	{
		
		New-Item -Path "$InstallDrive\visma\install\backup" -ItemType Directory -Name Appsettings
		
	}
	
	Refresh-StatusBarmain
	
	$StatusBarmain.Text = 'Bigram:' + $global:SelectedBigram + ' BackupFolder:' + $global:SelectedBackupfolder
}

$buttonRunFileBackup_Click={
	#TODO: Place custom script here
	if((Show-filebackup_psf) -eq 'OK')
	{
		
	}
}

$buttonBigramAndBackupFolde_Click={
	#TODO: Place custom script here
	if ((Show-BigramBackupFolder_psf) -eq 'OK')
	{

		
	}
}

$buttonInventory_Click={
	#TODO: Place custom script here

	if ((Show-Inventory_psf) -eq 'OK')
	{
		
	}
}

$buttonSQLTools_Click={
	#TODO: Place custom script here
	if ((Show-SQLTools_psf) -eq 'OK')
	{
		
	}
}

$buttonCleanUp_Click={
	#TODO: Place custom script here
	if ((Show-CleanUp_psf) -eq 'OK')
	{
		
	}
}

$buttonLoadLogfile_Click={
	#TODO: Place custom script here
	
	$richtextbox1.DetectUrls = $true
	
	$richtextbox1.add_LinkClicked({
			param ($sender,
				$e)
			Start-Process $e.LinkText
		})
	
	$openfiledialog1.ShowDialog()
	$logfile = $openfiledialog1.FileName
	$variable = Get-Content $logfile -Raw | ForEach-Object { "$_`r`n" }
	$richtextbox1.Clear()
	$richtextbox1.Lines = $variable
	$richtextbox1.ScrollToCaret()
}

$buttonTools_Click={
	#TODO: Place custom script here
	if ((Show-Tools_psf) -eq 'OK')
	{
		
	}
}

$buttonCloseAndEncrypt_Click={
	#TODO: Place custom script here
	
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::YesNo
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "Do you want to close the script and encrypt the backup?"
	$MessageTitle = "Close script"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::Yes)
	{
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Start closing script and encrypt backup")
		$richtextbox1.ScrollToCaret()
		
		# Define the path to aspnet_regiis.exe
		$AspNetRegIisLocation = "C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe"
		
		# Define the section to encrypt and the path to the web.config file
		$section = "appSettings"
		
		$AppPaths = @()

		$AppPaths = (Get-ChildItem -Path "$InstallDrive\Visma\Install\Backup" -Recurse -Filter web.config).DirectoryName
		
		$Encrypt_Decrypt_BAR.Maximum = $apppaths.Count
		$Encrypt_Decrypt_BAR.Step = 1
		$Encrypt_Decrypt_BAR.Value = 0
		
		foreach ($AppPath in $AppPaths)
		{
			# Run the encryption command
			& $AspNetRegIisLocation -pef $section $appPath
			$Encrypt_Decrypt_BAR.PerformStep()
		}

		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Finished Encrypting web.config ")

		$richtextbox1.ScrollToCaret()
		
		$MainForm.Close()
	}
	
	
	
	
}

$buttonStopAndStart_Click={
	#TODO: Place custom script here
	if ((Show-StopAndStart_psf) -eq 'OK')
	{
		
	}
}
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>


$toolstripbutton1_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Dark
		
}

$toolstripbutton2_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Light
}

$buttonAbout_Click={
	#TODO: Place custom script here
	Show-About_psf
}


]]></Code>
  <TV>0</TV>
  <Mode>0</Mode>
  <Assemblies />
</File>