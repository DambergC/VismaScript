<File version="3.2">
  <FileID>ed5ace8c-b444-4ddf-afbf-f623ef62c04a</FileID>
  <Preview>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
v0hXb6QrOT1T102byyws0Jkz0cqq96myvVe5hbk6efKiMmp9KjfzzSurUXxioi5cSVRaaZtZRp+z
jFKzjNIWs3yzzIrWbsXFJetmhdvMw6ynXZemHiWbbYjLNAUgr0L5DQEznX02wK6nub7ZY7fb5GxH
i/8Hv49ON7rd9g9iL69o71dJfYspFRUqajHLMcsvLK/WjcQspeSWKL2kxZz31DzNNpU2dJs7R6v5
e9jba/TyCnN+XmmlUvMbVWp+d/5mhBBCfpCKtoDzen18RuXoDqoZl2xyzU7X6LPLdqfs6Zid0AfT
PZy21OyQRSeVmMG52SkC9vfcqm5zebfzeH3kXKLyC0p07+49tba0qb2tU9999ydduBSj6NRSFZod
UzutTbGZf6IpAEl5DYpOKTM7vO1OQcip6nQutzvPW3YfU1trh2rrmnTxSpzu37ung4fO6GJCvllv
u+wHBySa62WXteqKWTe7rXab7TPjjZ7bz3cQoC0A3b33nIGn3MbMpMw9qLLfrVb5X/xPJv9OZXP3
qyy+WOX/8hfm9/9NZf/9H1VW1q7yzj5nQMovLlasuYGLqutNs6kwe66tzkrlllYpLjnTtJR2ZReU
KyEtx+zxFutmXoluJGUpu9YMxnUtZlDPUmJurVmHgCo7g8rKzdGN5GLnKY7cklIzUOYqo7BEsebG
yq+sNX/MMmWXlOmyuXETC5pV3RlQys0UXYhOVY6ZZ6XZhqquQRWVlys+vdpsk9uUlFwlZZk7gRno
84rLFJOYrsxKs+zUHKWXNig5s0QFjX5Vt7uVmJyqxLxGZx4lNY1KL2wyA3SPMgpqlFfVrNSMAsWZ
kpBW0qaS2malpOeb3zPN7+1m2S6lZeaadbbz71GxuX6iWUZMYoLOnL2ipOI2VXX0q7iyQtFxmc4y
qzoHVNbQpqSUm6YVVirfLCMxOUdpRdXKKm0yvzcpJcMuI0vp5aZIJMXp9IV4ZdeY4mK21fm7EUII
eSLVHb1KNgNtghlw7Y5ofq3LSXGjT9dTS7T30HntO2z2ro9c0n6TvZHndSEm2ykCD6fNq3E5O6vR
KaVmZ61V0Wav3e5k5pvzC8zl5Wbn7cSlVBUUFCvqXLTmLd+pz+duUF5+sa5cS1SMGRuLzfzstDZ2
RzMxu0b22YTraeUqMAO5sxx7EF+NKQhm3VLNmLNszS719Lik777VrvCjOnIh0YxlZgewxr4MMJqC
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</Preview>
  <Form>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
oRZCAAA=</Form>
  <Code><![CDATA[#requires -version 5.1

$currentVersion = "v1.0.18" # Replace with your current version
$updateDate = "2025-05-27" # Replace with date

$ScriptDate.Text = $updateDate

$ScriptVersion.Text = $currentVersion
$repo = "DambergC/VismaScript"
$file = "CygateScript.ps1"
$configFile = "Version.XML"
$localPath = "$global:InstallDrive\Visma\Install\Backup\CygateScript.ps1"
$localPathVersion = "$global:InstallDrive\Visma\Install\Backup\Appsettings\Version.XML"

$Elevetaion = Test-Elevation

if ($Elevetaion -eq $false)
{
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::OK
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "You must run the script in a elevated Powershell Prompt!"
	$MessageTitle = "Not Elevated"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::OK)
	{
		
		$MainForm.Close()
		
	}
	
	
}


function Get-LatestReleaseTag
{
	param (
		[string]$repo
	)
	$releasesUrl = "https://api.github.com/repos/$repo/releases/latest"
	#$releasesUrl = "https://github.com/$repo/releases/latest/download/$file"
	try
	{
		$response = Invoke-RestMethod -Uri $releasesUrl -Method Get
		if ($response -and $response.tag_name)
		{
			return $response.tag_name
			$releaseFound = "New Version: $response.tag_name ready to download"
		}
		else
		{
			$releaseFound  = "No release tag found"
			Write-Log -Level INFO -Message "No release tag found."
		}
	}
	catch
	{
		$releaseFound = "Could not check for latest release"
		Write-Log -Level INFO -Message "Failed to retrieve the latest release. Please check the repository name and try again."
	}
}

$latestTag = Get-LatestReleaseTag -repo $repo

function Download-LatestVersion
{
	param (
		[string]$repo,
		[string]$file,
		[string]$localPath,
		[string]$latestTag
	)
	#$downloadUrl = "https://raw.githubusercontent.com/$repo/main/$file"
	$downloadUrl = "https://github.com/$repo/releases/latest/download/$file"
	#Invoke-WebRequest -Uri $downloadUrl -OutFile $localPath -UseBasicParsing -Headers $headers -Method Get
	Invoke-WebRequest -Uri $downloadUrl -OutFile $localPath -UseBasicParsing -Method Get
}

function Download-LatestVersionVersionFile
{
	param (
		[string]$repo,
		[string]$file,
		[string]$localPath,
		[string]$latestTag
	)

	$downloadUrlVersion = "https://github.com/$repo/releases/latest/download/$configFile"
	Invoke-WebRequest -Uri $downloadUrlVersion -OutFile $localPathVersion -UseBasicParsing -Method Get
}

Download-LatestVersionVersionFile -repo $repo -file $configFile -localPath $localPathVersion -latestTag $latestTag



if ($latestTag -ne $currentVersion)
{
	$latestTag = Get-LatestReleaseTag -repo $repo
	
	Download-LatestVersion -repo $repo -file $file -localPath $localPath -latestTag $latestTag
	Download-LatestVersionVersionFile -repo $repo -file $configFile -localPath $localPathVersion -latestTag $latestTag
	
	$todoScript = "New version downloaded, PLEASE restart script"
	$promptRestart = $true
	Write-Log -Level INFO -Message "New version downloaded, PLEASE restart script"
	
	#Restart-Script -ScriptPath $localPath -DelayInSeconds 3
	
	
}

else
{
	$todoScript = "Latest version of CygateScript.ps1 running"
	Write-Log -Level INFO -Message "Latest version of CygateScript.ps1 running"
}





$MainForm_Load={
	#TODO: Initialize Form Controls here
	#Requires -Version 5.1
	
	$TeliaLogo = @"
████████╗███████╗██╗     ██╗ █████╗                                    
╚══██╔══╝██╔════╝██║     ██║██╔══██╗                                   
   ██║   █████╗  ██║     ██║███████║                                   
   ██║   ██╔══╝  ██║     ██║██╔══██║                                   
   ██║   ███████╗███████╗██║██║  ██║                                   
   ╚═╝   ╚══════╝╚══════╝╚═╝╚═╝  ╚═╝                                   
 ██████╗██╗   ██╗ ██████╗  █████╗ ████████╗███████╗     █████╗ ██████╗ 
██╔════╝╚██╗ ██╔╝██╔════╝ ██╔══██╗╚══██╔══╝██╔════╝    ██╔══██╗██╔══██╗
██║      ╚████╔╝ ██║  ███╗███████║   ██║   █████╗      ███████║██████╔╝
██║       ╚██╔╝  ██║   ██║██╔══██║   ██║   ██╔══╝      ██╔══██║██╔══██╗
╚██████╗   ██║   ╚██████╔╝██║  ██║   ██║   ███████╗    ██║  ██║██████╔╝
 ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚═╝  ╚═╝╚═════╝                                                                                                
"@
	
	
	$group = "Visma Services Trusted Users"
	$groupMembers = Get-LocalGroupMember -Group $group
	Write-Log -Level INFO -Message "$currentVersion"
	
	if ($groupMembers.Name -contains $currentUser)
	{
		
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$TeliaLogo")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$global:CurrentUser is a member of the $group group.")
		$richtextbox1.ScrollToCaret()
	}
	else
	{
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "You are not member of local group with rights to run this script"
		$MessageTitle = "Not authorized"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
			$MainForm.Close()
			
		}
	}
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$releaseFound")
	$richtextbox1.ScrollToCaret()
	
	if ($promptRestart -eq $true)
	{
		
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "New version of script downloaded, Please restart script!"
		$MessageTitle = "New Version of Script"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
		
			$richtextbox1.AppendText("Script will be restarted")
			$richtextbox1.AppendText("`n")
			$richtextbox1.ScrollToCaret()
			
			Write-Log -Level INFO -Message "Script will be restarted after new version downloaded"

		}
		
		
		
	}
	
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$todoScript")
	$richtextbox1.ScrollToCaret()
	
	
	$drives = @()
	
	$drives = (Get-PSProvider filesystem).Drives.root
	
	foreach ($drive in $drives)
	{
		
		
		if (test-path "$drive\visma\install\backup")
		{
			$result = $drive.Substring(0, [Math]::Min($drive.Length, 2))
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText("Backupfolder and script located on $drive")
			$richtextbox1.ScrollToCaret()
		}
	}
	
	
	$date = Get-Date -Format "yyyyMMdd"
	$Global:InstallDrive = $result
	$global:filename = "logfile_$date.log"
	$global:filepath = "$InstallDrive\Visma\Install\backup\"
	$global:logfile = "$filepath\$filename"
	
	
	$SavePathExistAppsettings = Test-Path -Path "$InstallDrive\visma\install\backup\Appsettings"
	
	if ($SavePathExistAppsettings -eq $false)
	{
		
		New-Item -Path "$InstallDrive\visma\install\backup" -ItemType Directory -Name Appsettings
		
	}
	
	Refresh-StatusBarmain
	
	$StatusBarmain.Text = 'Bigram:' + $global:SelectedBigram + ' BackupFolder:' + $global:SelectedBackupfolder
}

$buttonRunFileBackup_Click={
	#TODO: Place custom script here
	if((Show-filebackup_psf) -eq 'OK')
	{
		
	}
}

$buttonBigramAndBackupFolde_Click={
	#TODO: Place custom script here
	if ((Show-BigramBackupFolder_psf) -eq 'OK')
	{

		
	}
}

$buttonInventory_Click={
	#TODO: Place custom script here

	if ((Show-Inventory_psf) -eq 'OK')
	{
		
	}
}

$buttonSQLTools_Click={
	#TODO: Place custom script here
	if ((Show-SQLTools_psf) -eq 'OK')
	{
		
	}
}

$buttonCleanUp_Click={
	#TODO: Place custom script here
	if ((Show-CleanUp_psf) -eq 'OK')
	{
		
	}
}

$buttonLoadLogfile_Click={
	#TODO: Place custom script here
	$openfiledialog1.ShowDialog()
	$logfile = $openfiledialog1.FileName
	$variable = Get-Content $logfile -Raw | ForEach-Object { "$_`r`n" }
	$richtextbox1.Clear()
	$richtextbox1.Lines = $variable
	$richtextbox1.ScrollToCaret()
}

$buttonTools_Click={
	#TODO: Place custom script here
	if ((Show-Tools_psf) -eq 'OK')
	{
		
	}
}

$buttonCloseAndEncrypt_Click={
	#TODO: Place custom script here
	
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::YesNo
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "Do you want to close the script and encrypt the backup?"
	$MessageTitle = "Close script"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::Yes)
	{
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Start closing script and encrypt backup")
		$richtextbox1.ScrollToCaret()
		
		# Define the path to aspnet_regiis.exe
		$AspNetRegIisLocation = "C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe"
		
		# Define the section to encrypt and the path to the web.config file
		$section = "appSettings"
		
		$AppPaths = @()

		$AppPaths = (Get-ChildItem -Path "$InstallDrive\Visma\Install\Backup" -Recurse -Filter web.config).DirectoryName
		
		$Encrypt_Decrypt_BAR.Maximum = $apppaths.Count
		$Encrypt_Decrypt_BAR.Step = 1
		$Encrypt_Decrypt_BAR.Value = 0
		
		foreach ($AppPath in $AppPaths)
		{
			# Run the encryption command
			& $AspNetRegIisLocation -pef $section $appPath
			$Encrypt_Decrypt_BAR.PerformStep()
		}

		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Finished Encrypting web.config ")

		$richtextbox1.ScrollToCaret()
		
		$MainForm.Close()
	}
	
	
	
	
}

$buttonStopAndStart_Click={
	#TODO: Place custom script here
	if ((Show-StopAndStart_psf) -eq 'OK')
	{
		
	}
}
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>


$toolstripbutton1_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Dark
	
}

$toolstripbutton2_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Light
}

$buttonAbout_Click={
	#TODO: Place custom script here
	Show-About_psf
}
]]></Code>
  <TV>0</TV>
  <Mode>1</Mode>
  <Assemblies />
</File>