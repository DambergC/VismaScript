<File version="3.2">
  <FileID>ed5ace8c-b444-4ddf-afbf-f623ef62c04a</FileID>
  <Preview>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</Preview>
  <Form>6dpR1IN0+kEAACODCAAAAAAABADtW21T4kwW/W6V/yHlh63dB0veFXZnrLpJYEQJEt6edWqqpmKIMRASJi8E
qP3xe28HFQSh4ww+ujuZqWgk3X369Lmnb3frp+vbgaEH/vnhgSB8ih+EYDY2Ph+1Z35gjE7+tJy+
G/knVdcbxfdjYdNHx0LP8HzLdT4XTjL071iQQjsIPeOzY4SBp9nHQjO8tS39yph13KHhfL49O9OK
evE0W84XjEypfCQ42ghbVjTLoTqPBP3esvsevnokuU7gubZ/xJAi1qbnjg0vmC3KQBi4bV2zDdka
GQ7hwFdPj4Vs/lP64dVdRRW3bxydV7GlnWVETR9Kru16R+cLZFxFTM8NnX5tpJlGXZu5YXB03nAd
Y2dZybYMJ2hbc8RXOi0dC/lycWcholB0vb7htYOZTT2zpkY/L+8sWNNd54Fn/FS0HM2bnQOACFCB
moTf0VeQ3Ap+VzXxJtEN2E2Fh88Xlwhr1+HB+s9ef/2u7Xdt/5O1yUOYROBCTRevI7kidjIwV7sF
qPuVC1N0ACPx1nxjbLIKQQQOXEZwDVJJ7rgQDSpnoPSMJsi1ezmCmVYrgxLOmqqsBHIGZh6UQBl9
PTzAXlzoMpaY+9QL5dqUReplFP0SbHjVI2kIsk815qB+c4EtyI0OYqpVEIMnI6b6GfHYzCDGeZow
pucZrG3eLK38ZOm5XqIavCH1stlQpYzY0SE0N7W/DdvDVQPRA2JBhTzUh5fIypc2483HFif+cwSH
BxswcT3P0jXstQGNSCpIHRMmaiKF4Fj7EYRwVZEeedRMwjjn4i3x8+FBjNpEpvtBT5XTIHchULdg
lErgRHAKSoX0WJYHPkzzXcJov563xXOZPQ/iZ+RtG9PBEDHUTOLpBaQeXNagacpNGvvDg6jNosKh
GlI/x1v98KA0x7FRdOp3gadEGmNk2hvic2aDeuumpINcgoxKzKoeQr6KBq/DuMrbLEVj28uQV/hJ
eonvG50SYsssq0GugRcRjy4g85UriiJfT6i3zW94Payx2kJ/i3ma5HbVuKI3xHRfbEZye5lZpg7y
O1Gnsc/z8/ZCmynk5TIcoJfM/CIo8JVGarbh/e3+lqaoqZZSoBQWvOowAZjCVYHkWrOYYxa4eNv8
nCLvuBwixspNl8U1Pl+wGlNJ43QyJh7rc8SsIszLAhAL5PrTCjDe1j2U2zFTBRyZfpa8REJWDg+m
JsWAQrNZvZA4Bpiro8ubF1QjYkNmwwgyUK9VCbX76sj3dDaffunObyAwlSLUS+TzpyJrs/KqOJ1E
FEUtqsGECK66LKrYXDVjMWDz1rikN/KOOUaR3OtAE8mNpAnIBcBG2HzK5tdXxCli/KrgHN+tXqtS
eRFg+DnmJZFc/bND80hmY42b9ZZivKkURQY9A/q4w8a+BteqDFXmLeu87oxTyjuoBvELsrCS6eDy
KasSC60M/3waz+mWiL1OyYOnGjEvyUElgrJJNX6dLniTE3nsVWbA8jnmqJhLWavzggpyj8XZhcoT
pwPS578HXfDNLsbAQ9d1uECMxJvOHPGKvCHwk0WVX8JedvPosA3KEQ4PwvUsAUv4pIZKb0C8RS/2
ek59kgsVWqs2QApXc6SGKRVopvlhqsR8jz+qyEtGRYxTU5bqFQXyJvhwqW/ODwgDML2ZFBO55yPH
sq/SKfGm2GwkEJazXIN0A6YJzMUpBloy8zOuOJ1MYp/Hual1c0YjgzwEm4E+spKD6g2kWRz3J3Ee
kmJM3xBPDVRouhK7tAO19TyDooqtcVSKkdHa/Po8TidFNttRjcObDFyVquR32zAuX/GYxm1SJuyT
z6dpRaIN0EEjvfCk0Ocjo8CPSJShkSFev3ztxLy5mzRPmc3VpIMYbVrjuORvaP0K9Lescbbn5Iop
/QC04bGq4IzclfDZ2fZ+PC+Qa08lhdyn9+QdpGCvRTwOicfuDa3DGqqK0xK24GzItPe6osTF2sAU
RWjckBNIbdL4V5X8yydnaM5xpFpdnIlMkdZdb4ptw3UZSTKpAXPOOepPrqsYcm0TrLfm7Xdtv2v7
ILWl8cI8ZMNVuMObCXgHEOkGTbrJadpZuSO7vKDliFiiagy6XaBjgIhrZ5qob2jD+RqgQH6ug0jL
AJz8MLe4My8iaBZwAXuRFlNYYZQ25XTqLpKxwRLd0s1HFM+xlT5/Si+2vBfb47v2yxXNMy3n6Lxw
LCz+7yzSwPvR+cNBx87X24HmBU3XtwKLtuYlwwkMr617huHsLNsxpsHReWr9vcoEq1m8VHe1/hOe
7/T4Kc1eeHh799mQGAaB6+z9dOiWNQO3dHqy5YBonYi6q2sxf9ncsZAvrJ+gvDROS01ylImPac6K
x0Ju/fBpw/hotzWnb0wRVonndTacvFi6vtGz/FCz2RHQ0qlVxwvXj52eiULC4Riu9P47+9EzZaRj
afALhbogutO9KwUDxBoHshYYyYSyRJNiOCEHzSvHbBtP9DYdzzk4kIqle67v3gVCW3N8oW141t2x
kC2NeUb3SdG5PKqttO47Lyn6iRpuQWfzGWojmaJPORUNtmU+Gtu6VW2VGDRrlUYHv/dPsJzpGb4v
at71xPBsbYZicSMcmnvDtoV2EPYt90lhxZPySa5Y5tGYE9r2g64qju7NxsF32Yi/itB6rRPl8lm0
Ii6a4oHb0Db3CJ7mkntSJuFg/PXxvqju/yPki+vjsz3kF+zwRz3NlUmjnseHfjbq//IMpB24Y3D6
LDVLJjZw9HtSGqdqXvjFkRdY25r3ZOk3YnL8mlnvKbdwyvRbKsl0wztZoJYRkYCQBF5MmAdJ7miM
PNzaBtXRMrBNz3LMl1OhvaVSy3z+mozqTYUv2a5vIP7FVPQ67YsuVjU6FlqWec8zgJIW+obf02yr
vxBzVbN9nnGTLc12zZbhY6cxajRHN9Z/WWtb1JzlTl+zXHhGU7I8K2HklLkj52/aaPwvBk3QMH74
wb2rCHrG7QcMoo5LYbLPaWN1uZs95V8cLCHcp92fcYuWF8q70igD/QGVSXs/dde8s+yEy+YnwRUK
pdc45lLL+9Qd/y4LARL4Ef067Swx8QEVJNmG5nTHHyUpzr0mJ170cZ865QmfWKf8YN6VQy5g/xqF
YzYdhLTxs/9thoeWRpqVcJvhSXWU453xbMUsFu/LbXKLjv2pQC6XSHVc20OLRdgCk7IJ0zv3qLZa
f9MUjFbeZ/zbfKsg9+kyvHs1ON5qXfiQmdgDjb/GaFqWfv9WO5oethVgW7fuNJtMqfFWI77nu7aG
kMqJdxezx0KBxzpiwS4jTbghXUy2I81lZ0ywH82TRMv0tBEua0ns4bjq2v2EKfhPLRHz/KP9Mt59
WhWPsOKRj5GxHcIlbDx54bsyrk0Ef8D1QM0hrK43e8vJNrGaH1HuU8L85pUEzrsS7SPwD6jUVuhU
rbj74X7Xr6vWmzgzXAG6T8HyLwcQkpAI07tS7QqhO5W7+rBbxNdjg1Ufn0XsXczYa4f2jvqsuexL
fzNPiGJRPSuw+0/LLTswPNogMwUq5wt//+MES/7jP+zL7r8wd6wAm5ItD4mjieFc/uc3HMmR9q3m
+IFm2982yigp75T2d6zx3gkPsJ3AGmOOnn6n0HIxtAcC/fP/Anj3wkH6QQAA</Form>
  <Code><![CDATA[#requires -version 5.1

$currentVersion = "v2.0.3" # Replace with your current version
$updateDate = "2025-06-12" # Replace with date

$ScriptDate.Text = $updateDate

$ScriptVersion.Text = $currentVersion
$repo = "DambergC/VismaScript"
$file = "CygateScript.ps1"
$configFile = "Version.XML"
$localPath = "$global:InstallDrive\Visma\Install\Backup\CygateScript.ps1"
$localPathVersion = "$global:InstallDrive\Visma\Install\Backup\Appsettings\Version.XML"

$Elevation= Test-Elevation

if ($Elevation -eq $false)
{
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::OK
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "You must run the script in a elevated Powershell Prompt!"
	$MessageTitle = "Not Elevated"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::OK)
	{
		
		$MainForm.Close()
		
	}
	
	
}

if ($latestTag = Get-LatestReleaseTag -repo $repo)
{
	Write-Host "Working"
	
	if ($latestTag -ne $currentVersion)
	{
		#$latestTag = Get-LatestReleaseTag -repo $repo
		
		Download-LatestVersion -repo $repo -file $file -localPath $localPath -latestTag $latestTag
		Download-LatestVersionVersionFile -repo $repo -file $configFile -localPath $localPathVersion -latestTag $latestTag
		
		$todoScript = "New version downloaded, PLEASE restart script"
		$promptRestart = $true
		Write-Log -Level INFO -Message "New version downloaded, PLEASE restart script"
		
		#Restart-Script -ScriptPath $localPath -DelayInSeconds 3
		
		
	}
	
	else
	{
		$todoScript = "Latest version of CygateScript.ps1 running"
		Write-Log -Level INFO -Message "Latest version of CygateScript.ps1 running"
	}
	
}

Else
{
	
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::OK
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "You do not have access from this server to download from github, please download manually!!!"
	$MessageTitle = "Script and version.XML Not Dowloaded"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
}

Install-NuGetPackage
Install-SqlServerModule

$MainForm_Load={
	#TODO: Initialize Form Controls here
	#Requires -Version 5.1
	
	$TeliaLogo = @"
████████╗███████╗██╗     ██╗ █████╗                                    
╚══██╔══╝██╔════╝██║     ██║██╔══██╗                                   
   ██║   █████╗  ██║     ██║███████║                                   
   ██║   ██╔══╝  ██║     ██║██╔══██║                                   
   ██║   ███████╗███████╗██║██║  ██║                                   
   ╚═╝   ╚══════╝╚══════╝╚═╝╚═╝  ╚═╝                                   
 ██████╗██╗   ██╗ ██████╗  █████╗ ████████╗███████╗     █████╗ ██████╗ 
██╔════╝╚██╗ ██╔╝██╔════╝ ██╔══██╗╚══██╔══╝██╔════╝    ██╔══██╗██╔══██╗
██║      ╚████╔╝ ██║  ███╗███████║   ██║   █████╗      ███████║██████╔╝
██║       ╚██╔╝  ██║   ██║██╔══██║   ██║   ██╔══╝      ██╔══██║██╔══██╗
╚██████╗   ██║   ╚██████╔╝██║  ██║   ██║   ███████╗    ██║  ██║██████╔╝
 ╚═════╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚═╝  ╚═╝╚═════╝                                                                                                
"@
	
	
	$group = "Visma Services Trusted Users"
	$groupMembers = Get-LocalGroupMember -Group $group
	Write-Log -Level INFO -Message "$currentVersion"
	
	if ($groupMembers.Name -contains $currentUser)
	{
		
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$TeliaLogo")
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("$global:CurrentUser is a member of the $group group.")
		$richtextbox1.ScrollToCaret()
	}
	else
	{
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "You are not member of local group with rights to run this script"
		$MessageTitle = "Not authorized"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
			$MainForm.Close()
			
		}
	}
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$releaseFound")
	$richtextbox1.ScrollToCaret()
	
	if ($promptRestart -eq $true)
	{
		
		Add-Type -AssemblyName PresentationCore, PresentationFramework
		$ButtonType = [System.Windows.MessageBoxButton]::OK
		$MessageIcon = [System.Windows.MessageBoxImage]::Information
		$MessageBody = "New version of script downloaded, Please restart script!"
		$MessageTitle = "New Version of Script"
		
		$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
		
		if ($Result -eq [System.Windows.MessageBoxResult]::OK)
		{
			
		
			$richtextbox1.AppendText("Script will be restarted")
			$richtextbox1.AppendText("`n")
			$richtextbox1.ScrollToCaret()
			
			Write-Log -Level INFO -Message "Script will be restarted after new version downloaded"

		}
		
		
		
	}
	
	$richtextbox1.AppendText("`n")
	$richtextbox1.AppendText("$todoScript")
	$richtextbox1.ScrollToCaret()
	
	
	$drives = @()
	
	$drives = (Get-PSProvider filesystem).Drives.root
	
	foreach ($drive in $drives)
	{
		
		
		if (test-path "$drive\visma\install\backup")
		{
			$result = $drive.Substring(0, [Math]::Min($drive.Length, 2))
			$richtextbox1.AppendText("`n")
			$richtextbox1.AppendText("Backupfolder and script located on $drive")
			$richtextbox1.ScrollToCaret()
		}
	}
	
	
	$date = Get-Date -Format "yyyyMMdd"
	$Global:InstallDrive = $result
	$global:filename = "logfile_$date.log"
	$global:filepath = "$InstallDrive\Visma\Install\backup\"
	$global:logfile = "$filepath\$filename"
	
	
	$SavePathExistAppsettings = Test-Path -Path "$InstallDrive\visma\install\backup\Appsettings"
	
	if ($SavePathExistAppsettings -eq $false)
	{
		
		New-Item -Path "$InstallDrive\visma\install\backup" -ItemType Directory -Name Appsettings
		
	}
	
	Refresh-StatusBarmain
	
	$StatusBarmain.Text = 'Bigram:' + $global:SelectedBigram + ' BackupFolder:' + $global:SelectedBackupfolder
}

$buttonRunFileBackup_Click={
	#TODO: Place custom script here
	if((Show-filebackup_psf) -eq 'OK')
	{
		
	}
}

$buttonBigramAndBackupFolde_Click={
	#TODO: Place custom script here
	if ((Show-BigramBackupFolder_psf) -eq 'OK')
	{

		
	}
}

$buttonInventory_Click={
	#TODO: Place custom script here

	if ((Show-Inventory_psf) -eq 'OK')
	{
		
	}
}

$buttonSQLTools_Click={
	#TODO: Place custom script here
	if ((Show-SQLTools_psf) -eq 'OK')
	{
		
	}
}

$buttonCleanUp_Click={
	#TODO: Place custom script here
	if ((Show-CleanUp_psf) -eq 'OK')
	{
		
	}
}

$buttonLoadLogfile_Click={
	#TODO: Place custom script here
	
	$richtextbox1.DetectUrls = $true
	
	$richtextbox1.add_LinkClicked({
			param ($sender,
				$e)
			Start-Process $e.LinkText
		})
	
	$openfiledialog1.ShowDialog()
	$logfile = $openfiledialog1.FileName
	$variable = Get-Content $logfile -Raw | ForEach-Object { "$_`r`n" }
	$richtextbox1.Clear()
	$richtextbox1.Lines = $variable
	$richtextbox1.ScrollToCaret()
}

$buttonTools_Click={
	#TODO: Place custom script here
	if ((Show-Tools_psf) -eq 'OK')
	{
		
	}
}

$buttonCloseAndEncrypt_Click={
	#TODO: Place custom script here
	
	Add-Type -AssemblyName PresentationCore, PresentationFramework
	$ButtonType = [System.Windows.MessageBoxButton]::YesNo
	$MessageIcon = [System.Windows.MessageBoxImage]::Information
	$MessageBody = "Do you want to close the script and encrypt the backup?"
	$MessageTitle = "Close script"
	
	$Result = [System.Windows.MessageBox]::Show($MessageBody, $MessageTitle, $ButtonType, $MessageIcon)
	
	
	if ($Result -eq [System.Windows.MessageBoxResult]::Yes)
	{
		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Start closing script and encrypt backup")
		$richtextbox1.ScrollToCaret()
		
		# Define the path to aspnet_regiis.exe
		$AspNetRegIisLocation = "C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe"
		
		# Define the section to encrypt and the path to the web.config file
		$section = "appSettings"
		
		$AppPaths = @()

		$AppPaths = (Get-ChildItem -Path "$InstallDrive\Visma\Install\Backup" -Recurse -Filter web.config).DirectoryName
		
		$Encrypt_Decrypt_BAR.Maximum = $apppaths.Count
		$Encrypt_Decrypt_BAR.Step = 1
		$Encrypt_Decrypt_BAR.Value = 0
		
		foreach ($AppPath in $AppPaths)
		{
			# Run the encryption command
			& $AspNetRegIisLocation -pef $section $appPath
			$Encrypt_Decrypt_BAR.PerformStep()
		}

		$richtextbox1.AppendText("`n")
		$richtextbox1.AppendText("Finished Encrypting web.config ")

		$richtextbox1.ScrollToCaret()
		
		$MainForm.Close()
	}
	
	
	
	
}

$buttonStopAndStart_Click={
	#TODO: Place custom script here
	if ((Show-StopAndStart_psf) -eq 'OK')
	{
		
	}
}
<#
	.SYNOPSIS
		Applies a theme to the control and its children.
	
	.PARAMETER Control
		The control to theme. Usually the form itself.
	
	.PARAMETER Theme
		The color theme:
		Light
		Dark

	.PARAMETER CustomColor
		A hashtable that contains the color values.
		Keys:
		WindowColor
		ContainerColor
		BackColor
		ForeColor
		BorderColor
		SelectionForeColor
		SelectionBackColor
		MenuSelectionColor
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -Theme Dark
	
	.EXAMPLE
		PS C:\> Set-ControlTheme -Control $form1 -CustomColor @{ WindowColor = 'White'; ContainerBackColor = 'Gray'; BackColor... }
	.NOTES
		Created by SAPIEN Technologies, Inc.
#>


$toolstripbutton1_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Dark
	
}

$toolstripbutton2_Click={
	#TODO: Place custom script here
	Set-ControlTheme -Control $MainForm -Theme Light
}

$buttonAbout_Click={
	#TODO: Place custom script here
	Show-About_psf
}
]]></Code>
  <TV>0</TV>
  <Mode>0</Mode>
  <Assemblies />
</File>